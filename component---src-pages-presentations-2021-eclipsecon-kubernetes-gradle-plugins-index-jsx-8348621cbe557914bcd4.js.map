{"version":3,"file":"component---src-pages-presentations-2021-eclipsecon-kubernetes-gradle-plugins-index-jsx-8348621cbe557914bcd4.js","mappings":"4IAAA,IAAe,IAA0B,8D,+ECMzC,MAAMA,EAAQ,sFAYd,WAAeC,EAAAA,EAAAA,IATkBC,IAC/BC,EAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,cAACE,EAAAA,EAAM,KACLF,EAAAA,cAAA,aAAQH,IAEVG,EAAAA,cAACG,EAAAA,QAAa,CAACF,UAAU,wBAAwBG,MAAOP,EAAOQ,SAPlD,eAWsC,IAAK,qE,wDCd5D,MAAMC,EAAgB,SAACC,GAAY,YAAL,IAAPA,IAAAA,EAAU,IAAQ,yBAAwBA,EAAU,KAAKA,IAAY,GAAI,EAiBhG,UAfsBC,IAAA,IAAC,UAACP,EAAS,MAAEG,EAAK,SAAEC,EAAW,GAAE,SAAEI,GAASD,EAAA,OAChER,EAAAA,cAAA,OAAKC,UAAW,GAAGK,OAAmBL,KACpCD,EAAAA,cAAA,OAAKC,UAAW,GAAGK,EAAc,cAC/BN,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKU,IAAKC,EAAAA,EAAMC,IAAI,qCAEtBZ,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,MAAIC,UAAU,SAASG,GACvBJ,EAAAA,cAAA,MAAIC,UAAU,YAAYI,IAE3BI,I,mICbA,MAAMI,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAyCrC,KAvCA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEb,IAAiB,OAAZc,GAAMd,EAChB,MAAM,EAACM,EAAY,EAACS,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCb,EAAc,EAChBS,EAAeT,EAAc,IAE7Bc,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCL,EAAcO,EAChBE,EAAeT,EAAc,IAE7Bc,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,MACL,IAAK,UACHQ,EAAAA,EAAAA,IAAS,OAYf,OAPAC,EAAAA,EAAAA,WAAU,KACRC,SAASC,iBAAiB,UAAWN,GAAiB,GAC/C,KACLK,SAASE,oBAAoB,UAAWP,GAAiB,KAE1D,CAACX,IAEGd,EAAAA,cAACkB,EAAgBe,OAAAC,OAAA,GAAKZ,EAAK,CAAER,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2021-eclipsecon-kubernetes-gradle-plugins/assets/eclipsecon-white.png","webpack://@marcnuri/presentations/./src/pages/presentations/2021-eclipsecon-kubernetes-gradle-plugins/index.jsx","webpack://@marcnuri/presentations/./src/pages/presentations/2021-eclipsecon-kubernetes-gradle-plugins/components/title-template.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/eclipsecon-white-7d6a164bf0362af837ea4fb021e08b02.png\";","import React from 'react';\nimport {Helmet} from 'react-helmet';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport TitleTemplate from './components/title-template';\nimport './styles/index.scss';\n\nconst TITLE = 'Containerize and deploy into Kubernetes your Gradle Java project with Eclipse JKube';\nconst SUBTITLE = 'Marc Nuri';\n\nconst EclipseJKubeIntroduction = () => (\n  <div className='eclipsecon-2021'>\n    <Helmet>\n      <title>{TITLE}</title>\n    </Helmet>\n    <TitleTemplate className='eclipsecon-2021-index' title={TITLE} subtitle={SUBTITLE} />\n  </div>\n);\n\nexport default slideControls(EclipseJKubeIntroduction, '/', '/presentations/2021-eclipsecon-kubernetes-gradle-plugins/slide-010');\n","import React from 'react';\nimport logo from '../assets/eclipsecon-white.png';\nimport '../styles/title-template.scss';\n\nconst calcClassName = (element = '') => (`eclipsecon-2021-title${element ? `__${element}` : ''}`);\n\nconst TitleTemplate = ({className, title, subtitle = '', children}) => (\n  <div className={`${calcClassName()} ${className}`}>\n    <div className={`${calcClassName('content')}`}>\n      <div className='logo'>\n        <img src={logo} alt='An image of the EclipseCon logo' />\n      </div>\n      <div className='title-band'>\n        <h1 className='title'>{title}</h1>\n        <h2 className='subtitle'>{subtitle}</h2>\n      </div>\n      {children}\n    </div>\n  </div>\n);\n\nexport default TitleTemplate;\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["TITLE","slideControls","EclipseJKubeIntroduction","React","className","Helmet","TitleTemplate","title","subtitle","calcClassName","element","_ref","children","src","logo","alt","visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","useEffect","document","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}