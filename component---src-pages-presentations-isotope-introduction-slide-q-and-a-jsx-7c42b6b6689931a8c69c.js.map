{"version":3,"file":"component---src-pages-presentations-isotope-introduction-slide-q-and-a-jsx-7c42b6b6689931a8c69c.js","mappings":"yKAYA,WAAeA,EAAAA,EAAAA,IARIC,IACjBC,EAAAA,cAAA,OAAKC,UAAW,uBACdD,EAAAA,cAAA,OAAKC,UAAW,WAAW,UAMU,6CAA8C,8C,8ICRhF,MAAMC,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAoDrC,KAlDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GAC5E,SAAAC,GACE,SAAAC,EAAYC,GAAQ,IAADC,EAKgC,OAJjDA,EAAAH,EAAAI,KAAA,KAAMF,IAAM,MACPG,MAAQ,CACXb,YAAa,GAEfW,EAAKG,gBAAkBH,EAAKI,UAAUC,KAAIL,GAAOA,CACnD,EAACM,EAAAA,EAAAA,GAAAR,EAAAD,GAAA,IAAAU,EAAAT,EAAAU,UAsCA,OAtCAD,EAEDE,OAAA,WACE,OAAOvB,EAAAA,cAACO,EAAgBiB,OAAAC,OAAA,GAAKC,KAAKb,MAAK,CAAEV,YAAauB,KAAKV,MAAMb,cACnE,EAACkB,EAEDM,kBAAA,WACEC,SAASC,iBAAiB,UAAWH,KAAKT,iBAAiB,EAC7D,EAACI,EAEDS,qBAAA,WACEF,SAASG,oBAAoB,UAAWL,KAAKT,iBAAiB,EAChE,EAACI,EAEDH,UAAA,SAAUc,GACR,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCP,KAAKV,MAAMb,YAAc,EAC3BuB,KAAKQ,SAAS,CAAC/B,YAAauB,KAAKV,MAAMb,YAAc,KAErDgC,EAAAA,EAAAA,IAAS3B,GAEX,MACF,IAAK,QACL,IAAK,aACCkB,KAAKV,MAAMb,YAAcO,EAC3BgB,KAAKQ,SAAS,CAAC/B,YAAauB,KAAKV,MAAMb,YAAc,KAErDgC,EAAAA,EAAAA,IAAS1B,GAEX,MACF,IAAK,MACL,IAAK,UACH0B,EAAAA,EAAAA,IAAS,KAIf,EAACvB,CAAA,CA7CH,CAAqBZ,EAAAA,UA+CvB,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/isotope-introduction/slide-q-and-a.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport './slide-q-and-a.scss';\n\nconst SlideQAndA = () => (\n  <div className={'slide slide-q-and-a'}>\n    <div className={'content'}>\n      Q & A\n    </div>\n  </div>\n);\n\nexport default slideControls(SlideQAndA, '/presentations/isotope-introduction/slide6', '/presentations/isotope-introduction/summary');\n","import React from 'react';\nimport {navigate} from 'gatsby';\n\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentStep: 1\n      };\n      this.handleOnKeyDown = this.onKeyDown.bind(this);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} currentStep={this.state.currentStep} />;\n    }\n\n    componentDidMount() {\n      document.addEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    onKeyDown(event) {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (this.state.currentStep > 1) {\n            this.setState({currentStep: this.state.currentStep - 1});\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (this.state.currentStep < totalSteps) {\n            this.setState({currentStep: this.state.currentStep + 1});\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          navigate('/');\n          break;\n        default:\n      }\n    }\n  };\n}\n\nexport default slideControls;\n"],"names":["slideControls","SlideQAndA","React","className","visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","_React$Component","_class","props","_this","call","state","handleOnKeyDown","onKeyDown","bind","_inheritsLoose","_proto","prototype","render","Object","assign","this","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","key","setState","navigate"],"sourceRoot":""}