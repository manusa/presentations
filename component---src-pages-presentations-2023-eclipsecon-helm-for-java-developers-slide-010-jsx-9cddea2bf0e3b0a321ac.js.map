{"version":3,"file":"component---src-pages-presentations-2023-eclipsecon-helm-for-java-developers-slide-010-jsx-9cddea2bf0e3b0a321ac.js","mappings":"oLA8BA,WAAeA,EAAAA,EAAAA,IAxBEC,IAAoB,IAAnB,YAACC,GAAYD,EAC7B,MAAME,GAAuBC,EAAAA,EAAAA,IAAyBF,GACtD,OACEG,EAAAA,cAACC,EAAAA,GAAAA,GAA4B,CAACC,MAAO,EAAGC,MAAM,YAC5CH,EAAAA,cAAA,OAAKI,UAAU,YACbJ,EAAAA,cAACK,EAAAA,GAAM,CAACD,UAAU,WAClBJ,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,SAAG,yCACHA,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,6BACJA,EAAAA,cAAA,UAAI,kBAENA,EAAAA,cAAA,WAAKA,EAAAA,cAAA,KAAGM,KAAK,gCAA+BN,EAAAA,cAAA,KAAGI,UAAU,mBAAmB,eAC5EJ,EAAAA,cAAA,WAAKA,EAAAA,cAAA,KAAGM,KAAK,oCAAmCN,EAAAA,cAAA,KAAGI,UAAU,oBAAoB,cACjFJ,EAAAA,cAAA,WAAKA,EAAAA,cAAA,KAAGM,KAAK,6BAA4BN,EAAAA,cAAA,KAAGI,UAAU,kBAAkB,IAACJ,EAAAA,cAAA,KAAGI,UAAU,kBAAkB,aAE1GJ,EAAAA,cAACO,EAAAA,GAAuB,CAACH,UAAW,iBAAiBN,EAAqB,UAOhF,kBAAkBG,EAAAA,GAAAA,KAClB,kBAAkBA,EAAAA,GAAAA,eAAiC,E,mIC7B9C,MAAMF,EAA2BF,GAAeW,GACnDX,EAAcW,EAAQ,SAAW,UAExBC,EAAyBZ,GAAeW,GACjDX,IAAgBW,EAAQ,SAAW,UAE1BE,EAA4Bb,GAAeW,GACpDX,EAAcW,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrElB,IAAiB,OAAZmB,GAAMnB,EAChB,MAAM,EAACC,EAAY,EAACmB,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCvB,EAAc,EAChBmB,EAAenB,EAAc,IAE7BwB,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCf,EAAciB,EAChBE,EAAenB,EAAc,IAE7BwB,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACrB,IAEGG,EAAAA,cAACW,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAElB,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2023-eclipsecon-helm-for-java-developers/slide-010.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport {Avatar, EclipseCon2023, FullstackQuarkusReactAd} from '../../../components';\n\nimport '../../../components/2023-eclipsecon-helm-for-java-developers/styles/slide-about-me.scss';\n\nconst Slide010 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  return (\n    <EclipseCon2023.SlideTemplate slide={1} title='About me'>\n      <div className='about-me'>\n        <Avatar className='avatar' />\n        <div>\n          <h2>Marc Nuri</h2>\n          <p>Principal Software Engineer - Red Hat</p>\n          <h4>Working on:</h4>\n          <ul>\n            <li>Fabric8 Kubernetes Client</li>\n            <li>Eclipse JKube</li>\n          </ul>\n          <div><a href='https://twitter.com/MarcNuri'><i className='fab fa-twitter' /> @MarcNuri</a></div>\n          <div><a href='https://linkedin.com/in/MarcNuri'><i className='fab fa-linkedin' /> MarcNuri</a></div>\n          <div><a href='https://github.com/manusa'><i className='fab fa-github' /> <i className='fab fa-gitter' /> manusa</a></div>\n        </div>\n        <FullstackQuarkusReactAd className={`advertisement ${classNameVisibleFrom(2)}`} />\n      </div>\n    </EclipseCon2023.SlideTemplate>\n  );\n}\n\nexport default slideControls(Slide010,\n  `/presentations/${EclipseCon2023.SLUG}`,\n  `/presentations/${EclipseCon2023.SLUG}/slide-020`, 2);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","_ref","currentStep","classNameVisibleFrom","visibleClassNameFromStep","React","EclipseCon2023","slide","title","className","Avatar","href","FullstackQuarkusReactAd","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}