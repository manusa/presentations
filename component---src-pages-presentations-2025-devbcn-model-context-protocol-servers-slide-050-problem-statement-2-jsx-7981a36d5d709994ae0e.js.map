{"version":3,"file":"component---src-pages-presentations-2025-devbcn-model-context-protocol-servers-slide-050-problem-statement-2-jsx-7981a36d5d709994ae0e.js","mappings":"oLAuCA,WAAeA,EAAAA,EAAAA,IAnCEC,IAAoB,IAAnB,YAACC,GAAYD,EAC7B,MAAME,GAAuBC,EAAAA,EAAAA,IAAyBF,GAChDG,EAAS,oCACf,OACEC,EAAAA,cAACC,EAAAA,GAAAA,GAAwB,CAACC,MAAO,EAAGC,MAAM,0CACxCH,EAAAA,cAACC,EAAAA,GAAAA,GAAkB,KACjBD,EAAAA,cAACC,EAAAA,GAAAA,GAA6B,KAAC,kFAG/BD,EAAAA,cAACC,EAAAA,GAAAA,GAAkC,KACjCD,EAAAA,cAAA,cAAQ,2BAAgC,OAAIA,EAAAA,cAAA,cAAQ,0BAA+B,0DAGrFA,EAAAA,cAACC,EAAAA,GAAAA,GAA6B,CAACG,UAAWP,EAAqB,IAAKE,GACpEC,EAAAA,cAACC,EAAAA,GAAAA,GAAkC,CAACG,UAAWP,EAAqB,IAAI,kFACSG,EAAAA,cAAA,WAC/EA,EAAAA,cAAA,cAAQ,qBAA0B,sBAAmBA,EAAAA,cAAA,WAAK,qGACwCA,EAAAA,cAAA,WAAK,yEAGzGA,EAAAA,cAACC,EAAAA,GAAAA,GAA0B,CACzBI,MAAuB,IAAhBT,EAAoBG,OAASO,EACpCC,gBAAgB,qBAGH,IAAhBX,GAAqBI,EAAAA,cAAA,OACpBQ,IAAKP,EAAAA,GAAAA,GACLQ,MAAO,CACLC,SAAU,WAAYC,IAAK,MAAOC,KAAM,MAAOC,UAAW,wBAAyBC,MAAO,OAAQC,OAAQ,MAAOC,UAAW,eAQpI,kBAAkBf,EAAAA,GAAAA,0CAClB,kBAAkBA,EAAAA,GAAAA,0CAClB,E,mICvCK,MAAMH,EAA2BF,GAAeqB,GACnDrB,EAAcqB,EAAQ,SAAW,UAExBC,EAAyBtB,GAAeqB,GACjDrB,IAAgBqB,EAAQ,SAAW,UAE1BE,EAA4BvB,GAAeqB,GACpDrB,EAAcqB,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrE5B,IAAiB,OAAZ6B,GAAM7B,EAChB,MAAM,EAACC,EAAY,EAAC6B,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCjC,EAAc,EAChB6B,EAAe7B,EAAc,IAE7BkC,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCzB,EAAc2B,EAChBE,EAAe7B,EAAc,IAE7BkC,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAAC/B,IAEGI,EAAAA,cAACoB,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAE5B,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2025-devbcn-model-context-protocol-servers/slide-050-problem-statement-2.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport {DevBcn2025} from '../../../components';\n\nconst Slide050 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  const prompt = `Can you order the tickets for me?`;\n  return (\n    <DevBcn2025.SlideTemplate slide={5} title='Problem Statement (II): Real Assistant'>\n      <DevBcn2025.ChatGpt>\n        <DevBcn2025.ChatGptUserMessage>\n          I'll be in Barcelona next week, what's the best time to visit Sagrada Familia?\n        </DevBcn2025.ChatGptUserMessage>\n        <DevBcn2025.ChatGptAssistantMessage>\n          <strong>Early morning (9-10 AM)</strong> or <strong>late afternoon (4-6PM)</strong> on weekdays.\n          Avoid weekends and holidays if possible.\n        </DevBcn2025.ChatGptAssistantMessage>\n        <DevBcn2025.ChatGptUserMessage className={classNameVisibleFrom(3)}>{prompt}</DevBcn2025.ChatGptUserMessage>\n        <DevBcn2025.ChatGptAssistantMessage className={classNameVisibleFrom(4)}>\n          I can't directly order tickets for you, but I can guide you to the right place:<br/>\n          <strong>Official website:</strong> sagradafamilia.org<br/>\n          You'll need to select your date, time slot, and ticket type (basilica only, or basilica + towers).<br/>\n          The site accepts major credit cards and shows real-time availability.\n        </DevBcn2025.ChatGptAssistantMessage>\n        <DevBcn2025.ChatGptComposer\n          input={currentStep === 2 ? prompt : undefined}\n          placeHolderText='Reply to Hal...'\n        />\n      </DevBcn2025.ChatGpt>\n      {currentStep === 5 && <img\n        src={DevBcn2025.michaelScott}\n        style={{\n          position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', width: '100%', height: '70%', objectFit: 'contain'\n      }}\n      />}\n    </DevBcn2025.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide050,\n  `/presentations/${DevBcn2025.SLUG}/slide-040-problem-statement-1-solved`,\n  `/presentations/${DevBcn2025.SLUG}/slide-060-problem-statement-2-solved`,\n  5);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","_ref","currentStep","classNameVisibleFrom","visibleClassNameFromStep","prompt","React","DevBcn2025","slide","title","className","input","undefined","placeHolderText","src","style","position","top","left","transform","width","height","objectFit","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}