{"version":3,"file":"component---src-pages-presentations-2025-devbcn-model-context-protocol-servers-slide-230-mcp-servers-metadata-jsx-c583932ca04bc57753a3.js","mappings":"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","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2025-devbcn-model-context-protocol-servers/slide-230-mcp-servers-metadata.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport {DevBcn2025} from '../../../components';\n\nconst CellTool = ({children}) => (\n  <DevBcn2025.Cell style={{padding: '0.5rem', fontFamily: 'monospace'}}>{children}</DevBcn2025.Cell>\n);\nconst Cell = ({children}) => (\n  <DevBcn2025.Cell style={{padding: '0.5rem'}}>{children}</DevBcn2025.Cell>\n);\nconst Slide220 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  return (\n    <DevBcn2025.SlideTemplate slide={23} title='Implementing MCP Servers: Descriptions & Metadata'>\n      <ul>\n        <li>Tool <strong>descriptions</strong> are essential for <strong>LLMs</strong> to understand and use tools effectively</li>\n        <ul>\n          <li>Experiment with target models</li>\n          <li>Experiment with different prompts</li>\n        </ul>\n        <li className={classNameVisibleFrom(2)}><strong>Annotations</strong> + metadata\n          <ul>\n            <li>Document for <strong>LLMs</strong> and <strong>end users</strong></li>\n            <li>Assistant / Agent UX</li>\n          </ul>\n        </li>\n      </ul>\n      <table className={classNameVisibleFrom(3)} style={{width: '100%'}}>\n        <thead>\n        <tr><DevBcn2025.Header>Annotation</DevBcn2025.Header><DevBcn2025.Header>Description</DevBcn2025.Header></tr>\n        </thead>\n        <tbody>\n        <tr><CellTool>title</CellTool><Cell>Human-readable title for UI</Cell></tr>\n        <tr><CellTool>readOnlyHint</CellTool><Cell>Tool doesn't make modifications</Cell></tr>\n        <tr><CellTool>destructiveHint</CellTool><Cell>Tool can perform destructive operations</Cell></tr>\n        <tr><CellTool>idempotentHint</CellTool><Cell>Tool can be safely retried</Cell></tr>\n        <tr><CellTool>openWorldHint</CellTool><Cell>Tool interacts with external systems</Cell></tr>\n        </tbody>\n      </table>\n      <div style={{position: 'fixed', left: '1rem', bottom: '1rem', fontSize: '1rem', fontStyle: 'italic', lineHeight: '1.5rem'}}>\n        https://blog.marcnuri.com/mcp-tool-annotations-introduction\n      </div>\n    </DevBcn2025.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide220,\n  `/presentations/${DevBcn2025.SLUG}/slide-220-mcp-servers-tool-budget`,\n  `/presentations/${DevBcn2025.SLUG}/slide-240-q-a`,\n  3);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["CellTool","_ref","children","React","DevBcn2025","style","padding","fontFamily","Cell","_ref2","slideControls","_ref3","currentStep","classNameVisibleFrom","visibleClassNameFromStep","slide","title","className","width","position","left","bottom","fontSize","fontStyle","lineHeight","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}