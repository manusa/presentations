{"version":3,"file":"component---src-pages-presentations-mock-mvc-in-action-slide-4-jsx-d4fc90f2ad1d6bc06d64.js","mappings":"+LAuBA,WAAeA,EAAAA,EAAAA,IAjBAC,IAAoB,IAAnB,YAACC,GAAYD,EAC3B,MAAME,GAAuBC,EAAAA,EAAAA,IAAyBF,GACtD,OACEG,EAAAA,cAAA,OAAKC,UAAW,gBACdD,EAAAA,cAAA,OAAKC,UAAW,SAAS,+BACzBD,EAAAA,cAAA,OAAKC,UAAW,WACdD,EAAAA,cAACE,EAAAA,GAAI,CAACD,UAAWH,EAAqB,GAAIK,SAAS,OAAOC,MAAOC,EAAAA,GAAe,0BAEhFL,EAAAA,cAACE,EAAAA,GAAI,CAACD,UAAWH,EAAqB,GAAIK,SAAS,OAAOC,MAAOC,EAAAA,GAAe,oEAEhFL,EAAAA,cAACE,EAAAA,GAAI,CAACD,UAAWH,EAAqB,GAAIK,SAAS,OAAOC,MAAOC,EAAAA,GAAe,4CAOnD,2CAA4C,2CAA4C,E,sBCvB7H,KACE,KAAQ,CACN,MAAS,UACT,WAAc,UACd,QAAW,QACX,UAAa,OACb,QAAW,SAEb,cAAe,CACb,MAAS,WAEX,eAAgB,CACd,MAAS,WAEX,cAAe,CACb,MAAS,WAEX,cAAe,CACb,MAAS,WAEX,eAAgB,CACd,MAAS,WAEX,oBAAqB,CACnB,MAAS,WAEX,gBAAiB,CACf,MAAS,WAEX,gBAAiB,CACf,MAAS,WAEX,yBAA0B,CACxB,MAAS,WAEX,YAAa,CACX,MAAS,WAEX,eAAgB,CACd,MAAS,WAEX,aAAc,CACZ,MAAS,WAEX,YAAa,CACX,MAAS,WAEX,cAAe,CACb,MAAS,WAEX,iBAAkB,CAChB,MAAS,WAEX,gBAAiB,CACf,MAAS,WAEX,eAAgB,CACd,MAAS,WAEX,aAAc,CACZ,MAAS,WAEX,YAAa,CACX,MAAS,WAEX,YAAa,CACX,MAAS,WAEX,mBAAoB,CAClB,MAAS,WAEX,sBAAuB,CACrB,MAAS,WAEX,gBAAiB,CACf,UAAa,UAEf,cAAe,CACb,WAAc,Q,mIC3EX,MAAMN,EAA2BF,GAAeS,GACnDT,EAAcS,EAAQ,SAAW,UAExBC,EAAyBV,GAAeS,GACjDT,IAAgBS,EAAQ,SAAW,UAE1BE,EAA4BX,GAAeS,GACpDT,EAAcS,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEhB,IAAiB,OAAZiB,GAAMjB,EAChB,MAAM,EAACC,EAAY,EAACiB,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCrB,EAAc,EAChBiB,EAAejB,EAAc,IAE7BsB,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCb,EAAce,EAChBE,EAAejB,EAAc,IAE7BsB,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACnB,IAEGG,EAAAA,cAACS,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAEhB,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/mock-mvc-in-action/slide4.jsx","webpack://@marcnuri/presentations/./node_modules/react-syntax-highlighter/dist/esm/styles/hljs/androidstudio.js","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport {Code} from '../../../components';\nimport {androidstudio} from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport './slide4.scss';\n\nconst Slide4 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  return (\n    <div className={'slide slide4'}>\n      <div className={'title'}>MockMVC Configuration types</div>\n      <div className={'content'}>\n        <Code className={classNameVisibleFrom(2)} language='java' style={androidstudio}>\n          @WebMvcTest annotation</Code>\n        <Code className={classNameVisibleFrom(3)} language='java' style={androidstudio}>\n          MockMvcBuilders.webAppContextSetup(WebApplicationContext.class);</Code>\n        <Code className={classNameVisibleFrom(4)} language='java' style={androidstudio}>\n          MockMvcBuilders.standaloneSetup(...);</Code>\n      </div>\n    </div>\n  );\n};\n\nexport default slideControls(Slide4, '/presentations/mock-mvc-in-action/slide3', '/presentations/mock-mvc-in-action/slide5', 4);\n","export default {\n  \"hljs\": {\n    \"color\": \"#a9b7c6\",\n    \"background\": \"#282b2e\",\n    \"display\": \"block\",\n    \"overflowX\": \"auto\",\n    \"padding\": \"0.5em\"\n  },\n  \"hljs-number\": {\n    \"color\": \"#6897BB\"\n  },\n  \"hljs-literal\": {\n    \"color\": \"#6897BB\"\n  },\n  \"hljs-symbol\": {\n    \"color\": \"#6897BB\"\n  },\n  \"hljs-bullet\": {\n    \"color\": \"#6897BB\"\n  },\n  \"hljs-keyword\": {\n    \"color\": \"#cc7832\"\n  },\n  \"hljs-selector-tag\": {\n    \"color\": \"#cc7832\"\n  },\n  \"hljs-deletion\": {\n    \"color\": \"#cc7832\"\n  },\n  \"hljs-variable\": {\n    \"color\": \"#629755\"\n  },\n  \"hljs-template-variable\": {\n    \"color\": \"#629755\"\n  },\n  \"hljs-link\": {\n    \"color\": \"#629755\"\n  },\n  \"hljs-comment\": {\n    \"color\": \"#808080\"\n  },\n  \"hljs-quote\": {\n    \"color\": \"#808080\"\n  },\n  \"hljs-meta\": {\n    \"color\": \"#bbb529\"\n  },\n  \"hljs-string\": {\n    \"color\": \"#6A8759\"\n  },\n  \"hljs-attribute\": {\n    \"color\": \"#6A8759\"\n  },\n  \"hljs-addition\": {\n    \"color\": \"#6A8759\"\n  },\n  \"hljs-section\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"hljs-title\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"hljs-type\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"hljs-name\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"hljs-selector-id\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"hljs-selector-class\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"hljs-emphasis\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-strong\": {\n    \"fontWeight\": \"bold\"\n  }\n};","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","_ref","currentStep","classNameVisibleFrom","visibleClassNameFromStep","React","className","Code","language","style","androidstudio","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}