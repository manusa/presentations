{"version":3,"file":"component---src-pages-presentations-2025-devbcn-model-context-protocol-servers-slide-120-mcp-flow-jsx-987def2d38ca078b667d.js","mappings":"qLAIA,MAAMA,EAAc,CAClB,CAACC,KAAM,EAAGC,OAAQ,eAClB,CAACD,KAAM,EAAGC,OAAQ,uBAClB,CAACD,KAAM,EAAGC,OAAQ,qBAClB,CAACD,KAAM,EAAGC,OAAQ,mBAClB,CAACD,KAAM,EAAGC,OAAQ,iBAClB,CAACD,KAAM,EAAGC,OAAQ,uBAClB,CAACD,KAAM,EAAGC,OAAQ,wBAClB,CAACD,KAAM,EAAGC,OAAQ,uBAClB,CAACD,KAAM,GAAIC,OAAQ,uBAEfC,EAAqBC,EAAAA,GAAAA,GA6B3B,WAAeC,EAAAA,EAAAA,IA1BEC,IAAoB,IAAnB,YAACC,GAAYD,EACzBE,EAAQ,GACZ,IAAK,MAAM,OAACN,EAAM,KAAED,KAASD,EACvBO,IAAgBN,IAClBO,GAAS,mBAAmBN,8BACZC,yBAA0CA,mEAC1CA,qEAKpB,OACEM,EAAAA,cAACL,EAAAA,GAAAA,GAAwB,CAACM,MAAO,GAAIC,MAAM,gBACzCF,EAAAA,cAAA,aAAQD,GACRC,EAAAA,cAAA,OAAKD,MAAO,CAACI,QAAS,OAAQC,cAAe,SAAUC,IAAK,OAAQC,OAAQ,OAAQC,WAAY,WAC9FP,EAAAA,cAAA,UAAI,yBACJA,EAAAA,cAACL,EAAAA,GAAAA,GAA6B,CAACI,MAAO,CAACS,KAAM,EAAGL,QAAS,OAAQI,WAAY,UAAWE,eAAgB,SAAUH,OAAQ,OAAQI,MAAO,OAAQC,SAAU,aAE7JX,EAAAA,cAAA,OAAKD,MAAO,CAACa,SAAU,QAASC,KAAM,OAAQC,OAAQ,OAAQC,SAAU,OAAQC,UAAW,SAAUC,WAAY,WAAW,+CAC9EjB,EAAAA,cAAA,WAAM,uEAQxD,kBAAkBL,EAAAA,GAAAA,wCAClB,kBAAkBA,EAAAA,GAAAA,4BAClB,G,mIC5CK,MAAMuB,EAA2BpB,GAAeN,GACnDM,EAAcN,EAAQ,SAAW,UAExB2B,EAAyBrB,GAAeN,GACjDM,IAAgBN,EAAQ,SAAW,UAE1B4B,EAA4BtB,GAAeN,GACpDM,EAAcN,EAAQ,SAAW,UAkDrC,KAhDA,SAAuB6B,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrE3B,IAAiB,OAAZ4B,GAAM5B,EAChB,MAAM,EAACC,EAAY,EAAC4B,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACChC,EAAc,EAChB4B,EAAe5B,EAAc,IAE7BiC,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCxB,EAAc0B,EAChBE,EAAe5B,EAAc,IAE7BiC,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAAC9B,IAEGE,EAAAA,cAACqB,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAE3B,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2025-devbcn-model-context-protocol-servers/slide-120-mcp-flow.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport {DevBcn2025} from '../../../components';\n\nconst cellIdSteps = [\n  {step: 2, cellId: 'user-prompt',},\n  {step: 3, cellId: 'prompt-tool-context'},\n  {step: 4, cellId: 'tool-call-request'},\n  {step: 5, cellId: 'tool-invocation'},\n  {step: 6, cellId: 'mcp-tool-call'},\n  {step: 7, cellId: 'api-service-request'},\n  {step: 8, cellId: 'api-service-response'},\n  {step: 9, cellId: 'prompt-tool-results'},\n  {step: 10, cellId: 'llm-final-response'},\n];\nconst highlightLineColor = DevBcn2025.ORANGE;\nconst highlightTextColor = '#DD0000';\n\nconst Slide120 = ({currentStep}) => {\n  let style = ``;\n  for (const {cellId, step} of cellIdSteps) {\n    if (currentStep === step) {\n      style += `*[data-cell-id=\"${cellId}\"] {\n        path {fill: ${highlightLineColor} !important; stroke: ${highlightLineColor} !important; stroke-width: 6 !important;}\n        rect {fill: ${highlightLineColor} !important;}\n        text {fill: ${highlightTextColor} !important;}\n      }`;\n    }\n  }\n  return (\n    <DevBcn2025.SlideTemplate slide={12} title='What is MCP?'>\n      <style>{style}</style>\n      <div style={{display: 'flex', flexDirection: 'column', gap: '1rem', height: '100%', alignItems: 'center'}}>\n        <h2>AI Assistant MCP flow</h2>\n        <DevBcn2025.McpSequenceDiagram style={{flex: 1, display: 'flex', alignItems: 'stretch', justifyContent: 'center', height: '100%', width: '100%', overflow: 'hidden'}} />\n      </div>\n      <div style={{position: 'fixed', left: '1rem', bottom: '1rem', fontSize: '1rem', fontStyle: 'italic', lineHeight: '1.5rem'}}>\n        https://modelcontextprotocol.io/introduction<br />\n        https://blog.marcnuri.com/model-context-protocol-mcp-introduction\n      </div>\n    </DevBcn2025.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide120,\n  `/presentations/${DevBcn2025.SLUG}/slide-110-mcp-general-architecture`,\n  `/presentations/${DevBcn2025.SLUG}/slide-130-mcp-standard`,\n  10);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["cellIdSteps","step","cellId","highlightLineColor","DevBcn2025","slideControls","_ref","currentStep","style","React","slide","title","display","flexDirection","gap","height","alignItems","flex","justifyContent","width","overflow","position","left","bottom","fontSize","fontStyle","lineHeight","visibleClassNameFromStep","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}