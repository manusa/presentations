{"version":3,"file":"component---src-pages-presentations-2024-devbcn-full-stack-reactive-application-slide-200-consuming-sse-jsx-041db518b34e9a8e926e.js","mappings":"mLAuCA,WAAeA,EAAAA,EAAAA,IAnCEC,IAAoB,IAAnB,YAACC,GAAYD,EAC7B,MAMME,EANuB,CAC3B,EAAG,CAAC,GACJ,EAAG,CAAC,EAAG,EAAG,EAAG,GACb,EAAG,CAAC,EAAG,EAAG,EAAG,IACb,EAAG,CAAC,GAAI,GAAI,KAEuCD,IAAgB,GACrE,OACEE,EAAAA,cAACC,EAAAA,GAAAA,GAAwB,CAACC,MAAO,GAAIC,MAAM,yCACzCH,EAAAA,cAAA,OAAKI,MAAO,CAACC,OAAQ,OAAQC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,SAAU,WACtGT,EAAAA,cAACU,EAAAA,GAAI,CACHC,SAAS,aACTC,iBAAiB,EACjBC,UAAWC,GAASf,EAAwBgB,SAASD,GAAQ,CAACE,MAAO,kCAAoC,CAAC,GAC1G,8eAqBR,kBAAkBf,EAAAA,GAAAA,6BAClB,kBAAkBA,EAAAA,GAAAA,gDAClB,E,mICvCK,MAAMgB,EAA2BnB,GAAeoB,GACnDpB,EAAcoB,EAAQ,SAAW,UAExBC,EAAyBrB,GAAeoB,GACjDpB,IAAgBoB,EAAQ,SAAW,UAE1BE,EAA4BtB,GAAeoB,GACpDpB,EAAcoB,EAAQ,SAAW,UAyCrC,KAvCA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrE3B,IAAiB,OAAZ4B,GAAM5B,EAChB,MAAM,EAACC,EAAY,EAAC4B,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACChC,EAAc,EAChB4B,EAAe5B,EAAc,IAE7BiC,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCxB,EAAc0B,EAChBE,EAAe5B,EAAc,IAE7BiC,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,MACL,IAAK,UACHQ,EAAAA,EAAAA,IAAS,OAYf,OAPAC,EAAAA,EAAAA,WAAU,KACRC,SAASC,iBAAiB,UAAWN,GAAiB,GAC/C,KACLK,SAASE,oBAAoB,UAAWP,GAAiB,KAE1D,CAAC9B,IAEGE,EAAAA,cAACqB,EAAgBe,OAAAC,OAAA,GAAKZ,EAAK,CAAE3B,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2024-devbcn-full-stack-reactive-application/slide-200-consuming-sse.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport {Code, DevBcn2024, kubernetesComponentsDiagram} from '../../../components';\n\nconst Slide200 = ({currentStep}) => {\n  const stepHighlightedLines = {\n    2: [2], // new EventSource()\n    3: [3, 4, 5, 6], // onopen\n    4: [7, 8, 9, 10], // onmessage\n    5: [11, 12, 13], // onerror\n  };\n  const currentHighlightedLines = stepHighlightedLines[currentStep] || [];\n  return (\n    <DevBcn2024.SlideTemplate slide={20} title='Frontend: Consuming Events Reactively'>\n      <div style={{height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', overflow: 'hidden'}}>\n        <Code\n          language='javascript'\n          useInlineStyles={false}\n          lineProps={line => (currentHighlightedLines.includes(line) ? {class: 'devbcn-2024__code--highlighted'} : {})}\n        >{`\n          // pseudo-code\n          const eventSource = new EventSource('backend.host/api/v1/watch');\n          eventSource.onopen = function() {\n            clearErrors();\n            clearStore();\n          };\n          eventSource.onmessage = function(event) {\n            const message = JSON.parse(event.data);\n            persistInStore(message);\n          };\n          eventSource.onerror = function() {\n            setError('Connection lost');\n          };\n        `}</Code>\n      </div>\n    </DevBcn2024.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide200,\n  `/presentations/${DevBcn2024.SLUG}/slide-190-keeping-state`,\n  `/presentations/${DevBcn2024.SLUG}/slide-210-reactive-applications-advantages`,\n  5);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","_ref","currentStep","currentHighlightedLines","React","DevBcn2024","slide","title","style","height","display","alignItems","justifyContent","overflow","Code","language","useInlineStyles","lineProps","line","includes","class","visibleClassNameFromStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","useEffect","document","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}