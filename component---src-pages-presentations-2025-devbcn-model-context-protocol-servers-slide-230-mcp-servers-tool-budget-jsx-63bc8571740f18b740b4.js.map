{"version":3,"file":"component---src-pages-presentations-2025-devbcn-model-context-protocol-servers-slide-230-mcp-servers-tool-budget-jsx-63bc8571740f18b740b4.js","mappings":"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","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2025-devbcn-model-context-protocol-servers/slide-230-mcp-servers-tool-budget.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport {DevBcn2025} from '../../../components';\n\nconst Bar = ({widthPercent, bgColor, text}) => (\n  <div style={{\n    width: widthPercent,\n    backgroundColor: bgColor,\n    color: '#fff',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontWeight: 'bold',\n    fontSize: '1.5rem'\n  }}>\n    {text}\n  </div>\n);\n\n\nconst Slide230 = ({currentStep}) => {\n  return (\n    <DevBcn2025.SlideTemplate slide={23} title='Implementing MCP Servers: Tool budget - Context is limited'>\n      <DevBcn2025.InnerSlide currentStep={currentStep} style={{padding: '1rem 0', gap: '3rem', justifyContent: 'space-evenly'}} >\n        <DevBcn2025.McpSequenceDiagram style={{\n          display: 'flex', height: '30vh', overflow: 'hidden'\n        }} />\n        <div>Every tool you expose takes part of the <strong>model context window</strong></div>\n        <div style={{display: 'flex', flexDirection: 'column', gap: '1rem', width: '80%'}}>\n          <div style={{\n            display: 'flex', height: '4rem', width: '100%', border: '2px solid ' + DevBcn2025.ORANGE, borderRadius: '0.5rem', overflow: 'hidden'\n          }}>\n            <Bar widthPercent='20%' bgColor='#33658a' text='SYSTEM PROMPT' />\n            <Bar widthPercent='30%' bgColor='#1e3a5f' text='MCP TOOL DESCRIPTIONS' />\n            <Bar widthPercent='25%' bgColor='#7fb3d5' text='USER PROMPT' />\n            <Bar widthPercent='25%' bgColor='#FFFFFF66' />\n          </div>\n          <div style={{fontSize: '1rem', fontWeight: 'bold', textAlign: 'center'}}>CONTEXT WINDOW</div>\n        </div>\n      </DevBcn2025.InnerSlide>\n      <DevBcn2025.InnerSlide currentStep={currentStep} style={{justifyContent: 'space-evenly'}} >\n        <ul>\n          <li>Context window is the maximum number of tokens the model can process at once</li>\n          <li>A <strong>simple</strong> tool can cost <strong>~100-500 tokens</strong> (at least)</li>\n          <li><strong>20</strong> tools can easily consume <strong>&gt; 5k tokens</strong></li>\n        </ul>\n        <table>\n          <thead>\n          <tr>\n            <DevBcn2025.Header>Model Type</DevBcn2025.Header>\n            <DevBcn2025.Header>Typical Context Window</DevBcn2025.Header>\n            <DevBcn2025.Header>Impact of <strong>5k Token</strong> Toolset</DevBcn2025.Header>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <DevBcn2025.Cell><DevBcn2025.ChildReading style={{width: '1.8rem', fill: 'white'}}/> Small</DevBcn2025.Cell>\n            <DevBcn2025.Cell>4k - 8k tokens</DevBcn2025.Cell>\n            <DevBcn2025.Cell>\n              üò± Consumes 60-100% of context.<br/>\n              Little to no room left for the user's prompt or conversation history.\n            </DevBcn2025.Cell>\n          </tr>\n          <tr>\n            <DevBcn2025.Cell><DevBcn2025.Graduate style={{width: '1.8rem', fill: 'white'}}/> Large</DevBcn2025.Cell>\n            <DevBcn2025.Cell>128k - 1M+ tokens</DevBcn2025.Cell>\n            <DevBcn2025.Cell>‚úÖ Consumes &lt;4% of context.<br/>\n              Plenty of space remains for complex reasoning and long conversations.\n            </DevBcn2025.Cell>\n          </tr>\n          </tbody>\n        </table>\n      </DevBcn2025.InnerSlide>\n      <DevBcn2025.InnerSlide currentStep={currentStep} style={{justifyContent: 'flex-start'}}>\n        <h2>Key Takeaways</h2>\n        <ul style={{'--li-bullet-content': '\"\"'}}>\n          <li>üß∞ You don‚Äôt need all your tools all the time (Client/User)</li>\n          <li>üßπ Implement tools wisely to maximize utility without overwhelming the model</li>\n          <li>‚úÇÔ∏è Optimize Tool Definitions</li>\n          <li>üìè Know Your Target Model</li>\n          <li>üîÑ Dynamic Loading</li>\n        </ul>\n      </DevBcn2025.InnerSlide>\n    </DevBcn2025.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide230,\n  `/presentations/${DevBcn2025.SLUG}/slide-220-mcp-servers-model-size`,\n  `/presentations/${DevBcn2025.SLUG}/slide-240-q-a`,\n  4);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["Bar","_ref","widthPercent","bgColor","text","React","style","width","backgroundColor","color","display","alignItems","justifyContent","fontWeight","fontSize","slideControls","_ref2","currentStep","DevBcn2025","slide","title","padding","gap","height","overflow","flexDirection","border","borderRadius","textAlign","fill","visibleClassNameFromStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}