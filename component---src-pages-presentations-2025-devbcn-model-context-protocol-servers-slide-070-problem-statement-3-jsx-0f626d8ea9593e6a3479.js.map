{"version":3,"file":"component---src-pages-presentations-2025-devbcn-model-context-protocol-servers-slide-070-problem-statement-3-jsx-0f626d8ea9593e6a3479.js","mappings":"kPAGO,MAAMA,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEC,IAAiB,OAAZC,GAAMD,EAChB,MAAM,EAACR,EAAY,EAACU,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCd,EAAc,EAChBU,EAAeV,EAAc,IAE7Be,EAAAA,EAAAA,IAASV,GAEX,MACF,IAAK,QACL,IAAK,aACCL,EAAcO,EAChBG,EAAeV,EAAc,IAE7Be,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,KACCO,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACZ,IAEG+B,EAAAA,cAAC3B,EAAgB4B,OAAAC,OAAA,GAAKxB,EAAK,CAAET,YAAaA,KAErD,C,oECjCA,WAAekC,EAAAA,EAAAA,IArBE1B,IAAoB,IAAnB,YAACR,GAAYQ,EAC7B,MAAM2B,GAAuBpC,EAAAA,EAAAA,IAAyBC,GAChDoC,EAAS,oFACf,OACEL,EAAAA,cAACM,EAAAA,GAAAA,GAAwB,CAACC,MAAO,EAAGC,MAAM,8CACxCR,EAAAA,cAACM,EAAAA,GAAAA,GAAkB,KAChBrC,EAAc,GAAK+B,EAAAA,cAACM,EAAAA,GAAAA,GAA0B,MAC/CN,EAAAA,cAACM,EAAAA,GAAAA,GAA6B,CAACG,UAAWL,EAAqB,IAAKC,GACpEL,EAAAA,cAACM,EAAAA,GAAAA,GAAkC,CAACG,UAAWL,EAAqB,IAAI,0RAIxEJ,EAAAA,cAACM,EAAAA,GAAAA,GAA0B,CACzBI,MAAuB,IAAhBzC,EAAoBoC,OAASM,EACpCC,gBAAiB3C,EAAc,EAAI,uBAAoB0C,OAQ/D,kBAAkBL,EAAAA,GAAAA,0CAClB,kBAAkBA,EAAAA,GAAAA,0CAClB,E","sources":["webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx","webpack://@marcnuri/presentations/./src/pages/presentations/2025-devbcn-model-context-protocol-servers/slide-070-problem-statement-3.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n","import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport {DevBcn2025} from '../../../components';\n\nconst Slide070 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  const prompt = `I need a PostgreSQL database, can you deploy one for me in my Kubernetes cluster?`;\n  return (\n    <DevBcn2025.SlideTemplate slide={7} title='Problem Statement (III): Specialized Tools'>\n      <DevBcn2025.ChatGpt>\n        {currentStep < 3 && <DevBcn2025.ChatGptGreeting />}\n        <DevBcn2025.ChatGptUserMessage className={classNameVisibleFrom(3)}>{prompt}</DevBcn2025.ChatGptUserMessage>\n        <DevBcn2025.ChatGptAssistantMessage className={classNameVisibleFrom(4)}>\n          Iâ€™m unable to directly deploy infrastructure or access your Kubernetes cluster myself.\n          However, I can guide you step-by-step, generate the necessary Kubernetes YAML manifests (Deployment, StatefulSet, Service, Secret, etc.), or provide a Helm chart command to deploy PostgreSQL.\n        </DevBcn2025.ChatGptAssistantMessage>\n        <DevBcn2025.ChatGptComposer\n          input={currentStep === 2 ? prompt : undefined}\n          placeHolderText={currentStep > 1 ? 'Reply to Hal...' : undefined}\n        />\n      </DevBcn2025.ChatGpt>\n    </DevBcn2025.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide070,\n  `/presentations/${DevBcn2025.SLUG}/slide-060-problem-statement-2-solved`,\n  `/presentations/${DevBcn2025.SLUG}/slide-080-problem-statement-3-solved`,\n  4);\n"],"names":["visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","_ref","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","React","Object","assign","slideControls","classNameVisibleFrom","prompt","DevBcn2025","slide","title","className","input","undefined","placeHolderText"],"sourceRoot":""}