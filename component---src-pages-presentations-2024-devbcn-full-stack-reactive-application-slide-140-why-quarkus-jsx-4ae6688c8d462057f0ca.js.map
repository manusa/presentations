{"version":3,"file":"component---src-pages-presentations-2024-devbcn-full-stack-reactive-application-slide-140-why-quarkus-jsx-4ae6688c8d462057f0ca.js","mappings":"oLA8CA,WAAeA,EAAAA,EAAAA,IA1CEC,IAAoB,IAAnB,YAACC,GAAYD,EAC7B,MAAME,GAAuBC,EAAAA,EAAAA,IAAyBF,GACtD,OACEG,EAAAA,cAACC,EAAAA,GAAAA,GAAwB,CAACC,MAAO,GAAIC,MAAM,gBACzCH,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAII,UAAWN,EAAqB,IAAI,qCAGxCE,EAAAA,cAAA,MAAII,UAAWN,EAAqB,IAAI,4CAGxCE,EAAAA,cAAA,MAAII,UAAWN,EAAqB,IAAI,iBAGxCE,EAAAA,cAAA,MAAII,UAAWN,EAAqB,IAAI,+CAEtCE,EAAAA,cAACK,EAAAA,GAAI,CAACC,SAAS,MAAMC,iBAAiB,GAAQ,uKAM9CP,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,qCACJA,EAAAA,cAAA,UAAI,2CAAwCA,EAAAA,cAAA,YAAM,aAAgB,KAClEA,EAAAA,cAAA,UAAI,wBAGRA,EAAAA,cAAA,MAAII,UAAWN,EAAqB,IAAI,sDAEtCE,EAAAA,cAACK,EAAAA,GAAI,CAACC,SAAS,MAAMC,iBAAiB,GAAQ,wLAatD,kBAAkBN,EAAAA,GAAAA,yCAClB,kBAAkBA,EAAAA,GAAAA,2BAClB,E,mIC9CK,MAAMF,EAA2BF,GAAeW,GACnDX,EAAcW,EAAQ,SAAW,UAExBC,EAAyBZ,GAAeW,GACjDX,IAAgBW,EAAQ,SAAW,UAE1BE,EAA4Bb,GAAeW,GACpDX,EAAcW,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrElB,IAAiB,OAAZmB,GAAMnB,EAChB,MAAM,EAACC,EAAY,EAACmB,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCvB,EAAc,EAChBmB,EAAenB,EAAc,IAE7BwB,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCf,EAAciB,EAChBE,EAAenB,EAAc,IAE7BwB,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACrB,IAEGG,EAAAA,cAACW,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAElB,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2024-devbcn-full-stack-reactive-application/slide-140-why-quarkus.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport {Code, DevBcn2024, kubernetesComponentsDiagram} from '../../../components';\n\nconst Slide140 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  return (\n    <DevBcn2024.SlideTemplate slide={14} title='Why Quarkus?'>\n      <ul>\n        <li className={classNameVisibleFrom(2)}>\n          Optimized for Java and Kubernetes\n        </li>\n        <li className={classNameVisibleFrom(3)}>\n          Fast boot times and low memory footprint\n        </li>\n        <li className={classNameVisibleFrom(4)}>\n          Developer Joy\n        </li>\n        <li className={classNameVisibleFrom(5)}>\n          Supports reactive programming out of the box\n          <Code language='xml' useInlineStyles={false}>{`\n            <dependency>\n              <groupId>io.quarkus</groupId>\n              <artifactId>quarkus-rest</artifactId>\n            </dependency>\n          `}</Code>\n          <ul>\n            <li>Non blocking I/O (Vert.x + Netty)</li>\n            <li>Unification of imperative and reactive (<code>@Blocking</code>)</li>\n            <li>Server Sent Events</li>\n          </ul>\n        </li>\n        <li className={classNameVisibleFrom(6)}>\n          Good integration with the Fabric8 Kubernetes Client\n          <Code language='xml' useInlineStyles={false}>{`\n            <dependency>\n              <groupId>io.quarkus</groupId>\n              <artifactId>quarkus-kubernetes-client</artifactId>\n            </dependency>\n          `}</Code>\n        </li>\n      </ul>\n    </DevBcn2024.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide140,\n  `/presentations/${DevBcn2024.SLUG}/slide-130-resilient-backend-quarkus`,\n  `/presentations/${DevBcn2024.SLUG}/slide-150-quarkus-sse`,\n  6);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","_ref","currentStep","classNameVisibleFrom","visibleClassNameFromStep","React","DevBcn2024","slide","title","className","Code","language","useInlineStyles","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}