{"version":3,"file":"component---src-pages-presentations-2023-eclipsecon-helm-for-java-developers-slide-150-jsx-d40877250a9f6d1e125c.js","mappings":"oLAIA,MAAMA,EAAOC,IAAA,IAAC,KAACC,EAAI,KAAEC,EAAI,SAAEC,GAASH,EAAA,OAClCI,EAAAA,cAAA,KAAGH,KAAMA,EAAMI,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAASH,EAAAA,cAAA,KAAGI,UAAWN,IAAQ,IAAEC,IAmBzF,WAAeM,EAAAA,EAAAA,IAjBEC,IACfN,EAAAA,cAACO,EAAAA,GAAAA,GAA4B,CAACC,kBAAkB,GAC9CR,EAAAA,cAAA,MAAIC,MAAO,CAACQ,SAAU,OAAQC,OAAQ,WAAYC,QAAS,EAAGR,MAAO,YAAY,OACjFH,EAAAA,cAAA,OAAKC,MAAO,CAACW,QAAS,OAAQC,cAAe,SAAUC,IAAK,OAAQL,SAAU,SAC5ET,EAAAA,cAACL,EAAI,CAACE,KAAK,mCAAmCC,KAAK,iBAAiB,4BACpEE,EAAAA,cAACL,EAAI,CAACE,KAAK,8BAA8BC,KAAK,kBAAiB,aAC/DE,EAAAA,cAACL,EAAI,CAACE,KAAK,gCAAgCC,KAAK,eAAc,0BAC9DE,EAAAA,cAACe,EAAAA,GAAS,CAACd,MAAO,CAACe,OAAQ,SAAUC,UAAU,UAAUC,UAAU,WAErElB,EAAAA,cAAA,OAAKC,MAAO,CAACkB,UAAW,QAASR,QAAS,gBAAiBF,SAAU,WACnET,EAAAA,cAACL,EAAI,CAACE,KAAM,oDAAoDU,EAAAA,GAAAA,OAAwB,oDACpCA,EAAAA,GAAAA,MAOxD,kBAAkBA,EAAAA,GAAAA,eAClB,kBAAkBA,EAAAA,GAAAA,M,8ICtBb,MAAMa,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAoDrC,KAlDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GAC5E,SAAAC,GACE,SAAAC,EAAYC,GAAQ,IAADC,EAKgC,OAJjDA,EAAAH,EAAAI,KAAA,KAAMF,IAAM,MACPG,MAAQ,CACXb,YAAa,GAEfW,EAAKG,gBAAkBH,EAAKI,UAAUC,KAAIL,GAAOA,CACnD,EAACM,EAAAA,EAAAA,GAAAR,EAAAD,GAAA,IAAAU,EAAAT,EAAAU,UAsCA,OAtCAD,EAEDE,OAAA,WACE,OAAOzC,EAAAA,cAACyB,EAAgBiB,OAAAC,OAAA,GAAKC,KAAKb,MAAK,CAAEV,YAAauB,KAAKV,MAAMb,cACnE,EAACkB,EAEDM,kBAAA,WACEC,SAASC,iBAAiB,UAAWH,KAAKT,iBAAiB,EAC7D,EAACI,EAEDS,qBAAA,WACEF,SAASG,oBAAoB,UAAWL,KAAKT,iBAAiB,EAChE,EAACI,EAEDH,UAAA,SAAUc,GACR,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCP,KAAKV,MAAMb,YAAc,EAC3BuB,KAAKQ,SAAS,CAAC/B,YAAauB,KAAKV,MAAMb,YAAc,KAErDgC,EAAAA,EAAAA,IAAS3B,GAEX,MACF,IAAK,QACL,IAAK,aACCkB,KAAKV,MAAMb,YAAcO,EAC3BgB,KAAKQ,SAAS,CAAC/B,YAAauB,KAAKV,MAAMb,YAAc,KAErDgC,EAAAA,EAAAA,IAAS1B,GAEX,MACF,IAAK,MACL,IAAK,UACH0B,EAAAA,EAAAA,IAAS,KAIf,EAACvB,CAAA,CA7CH,CAAqB9B,EAAAA,UA+CvB,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2023-eclipsecon-helm-for-java-developers/slide-150.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport {EclipseCon2023, JKubeLogo} from '../../../components';\n\nconst Link = ({href, icon, children}) =>\n  <a href={href} style={{textDecoration: 'none', color: '#AAA'}}><i className={icon} /> {children}</a>\n\nconst Slide150 = () => (\n  <EclipseCon2023.TitleTemplate titleBandVisible={false}>\n    <h2 style={{fontSize: '8rem', margin: '0 0 4rem', padding: 0, color: '#FAFAFA'}}>Q&A</h2>\n    <div style={{display: 'flex', flexDirection: 'column', gap: '1rem', fontSize: '3rem'}}>\n      <Link href='https://github.com/eclipse/jkube' icon='fab fa-github' >github.com/eclipse/jkube</Link>\n      <Link href='https://twitter.com/jkubeio' icon='fab fa-twitter'> @jkubeio</Link>\n      <Link href='https://www.eclipse.org/jkube' icon='fas fa-home'> www.eclipse.org/jkube</Link>\n      <JKubeLogo style={{height: '10rem'}} iconColor='#2285f7' textColor='white' />\n    </div>\n    <div style={{alignSelf: 'start', padding: '2rem 0 0 1rem', fontSize: '1.5rem'}}>\n      <Link href={`https://presentations.marcnuri.com/presentations/${EclipseCon2023.SLUG}/`}>\n        https://presentations.marcnuri.com/presentations/{EclipseCon2023.SLUG}\n      </Link>\n    </div>\n  </EclipseCon2023.TitleTemplate>\n);\n\nexport default slideControls(Slide150,\n  `/presentations/${EclipseCon2023.SLUG}/slide-140`,\n  `/presentations/${EclipseCon2023.SLUG}/`);\n","import React from 'react';\nimport {navigate} from 'gatsby';\n\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentStep: 1\n      };\n      this.handleOnKeyDown = this.onKeyDown.bind(this);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} currentStep={this.state.currentStep} />;\n    }\n\n    componentDidMount() {\n      document.addEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    onKeyDown(event) {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (this.state.currentStep > 1) {\n            this.setState({currentStep: this.state.currentStep - 1});\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (this.state.currentStep < totalSteps) {\n            this.setState({currentStep: this.state.currentStep + 1});\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          navigate('/');\n          break;\n        default:\n      }\n    }\n  };\n}\n\nexport default slideControls;\n"],"names":["Link","_ref","href","icon","children","React","style","textDecoration","color","className","slideControls","Slide150","EclipseCon2023","titleBandVisible","fontSize","margin","padding","display","flexDirection","gap","JKubeLogo","height","iconColor","textColor","alignSelf","visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","_React$Component","_class","props","_this","call","state","handleOnKeyDown","onKeyDown","bind","_inheritsLoose","_proto","prototype","render","Object","assign","this","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","key","setState","navigate"],"sourceRoot":""}