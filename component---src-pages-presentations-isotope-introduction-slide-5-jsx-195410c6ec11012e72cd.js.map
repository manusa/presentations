{"version":3,"file":"component---src-pages-presentations-isotope-introduction-slide-5-jsx-195410c6ec11012e72cd.js","mappings":"0KAoCA,WAAeA,EAAAA,EAAAA,IAhCAC,IAAoB,IAAnB,YAACC,GAAYD,EAC3B,MAAME,GAAuBC,EAAAA,EAAAA,IAAyBF,GACtD,OACEG,EAAAA,cAAA,OAAKC,UAAW,gBACdD,EAAAA,cAAA,OAAKC,UAAW,GAAGH,EAAqB,YAAY,yBACpDE,EAAAA,cAAA,OAAKC,UAAW,GAAGH,EAAqB,cACtCE,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,UAAI,8DACJA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,UAAI,iCAGRA,EAAAA,cAAA,OAAKC,UAAW,GAAGH,EAAqB,YAAY,0BACpDE,EAAAA,cAAA,OAAKC,UAAW,GAAGH,EAAqB,cACtCE,EAAAA,cAAA,MAAIC,UAAW,aACbD,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,UAAI,6CACJA,EAAAA,cAAA,UAAI,mBACJA,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,UAAI,+CAOuB,6CAA8C,6CAA8C,E,mICjC1H,MAAMD,EAA2BF,GAAeK,GACnDL,EAAcK,EAAQ,SAAW,UAExBC,EAAyBN,GAAeK,GACjDL,IAAgBK,EAAQ,SAAW,UAE1BE,EAA4BP,GAAeK,GACpDL,EAAcK,EAAQ,SAAW,UAyCrC,KAvCA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEZ,IAAiB,OAAZa,GAAMb,EAChB,MAAM,EAACC,EAAY,EAACa,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCjB,EAAc,EAChBa,EAAeb,EAAc,IAE7BkB,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCT,EAAcW,EAChBE,EAAeb,EAAc,IAE7BkB,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,MACL,IAAK,UACHQ,EAAAA,EAAAA,IAAS,OAYf,OAPAC,EAAAA,EAAAA,WAAU,KACRC,SAASC,iBAAiB,UAAWN,GAAiB,GAC/C,KACLK,SAASE,oBAAoB,UAAWP,GAAiB,KAE1D,CAACf,IAEGG,EAAAA,cAACK,EAAgBe,OAAAC,OAAA,GAAKZ,EAAK,CAAEZ,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/isotope-introduction/slide5.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport './slide5.scss';\n\nconst Slide5 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  return (\n    <div className={'slide slide5'}>\n      <div className={`${classNameVisibleFrom(1)} title`}>Back-end Architecture</div>\n      <div className={`${classNameVisibleFrom(1)} content`}>\n        <ul>\n          <li>Spring Boot</li>\n          <li>Spring HATEOAS</li>\n          <li>Spring Webflux -> Reactive endpoints -> Server Sent Events</li>\n          <li>JavaMail</li>\n          <li>JUnit + Mockito + Powermock</li>\n        </ul>\n      </div>\n      <div className={`${classNameVisibleFrom(2)} title`}>Front-end Architecture</div>\n      <div className={`${classNameVisibleFrom(2)} content`}>\n        <ul className={'columns-2'}>\n          <li>Redux</li>\n          <li>i18next</li>\n          <li>Web workers</li>\n          <li>SJCL (Stanford Javascript Crypto Library)</li>\n          <li>IndexedDB + IDB</li>\n          <li>TinyMCE</li>\n          <li>DOMPurify</li>\n          <li>Jest + Enzyme</li>\n          <li>HTML5 (Drag and Drop, Notifications...)</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default slideControls(Slide5, '/presentations/isotope-introduction/slide4', '/presentations/isotope-introduction/slide6', 2);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","_ref","currentStep","classNameVisibleFrom","visibleClassNameFromStep","React","className","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","useEffect","document","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}