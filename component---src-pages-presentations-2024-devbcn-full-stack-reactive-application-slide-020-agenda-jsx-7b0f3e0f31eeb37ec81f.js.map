{"version":3,"file":"component---src-pages-presentations-2024-devbcn-full-stack-reactive-application-slide-020-agenda-jsx-7b0f3e0f31eeb37ec81f.js","mappings":"qLA4CA,WAAeA,EAAAA,EAAAA,IAxCEC,IAEbC,EAAAA,cAACC,EAAAA,GAAAA,GAAwB,CAACC,MAAO,EAAGC,MAAM,UACxCH,EAAAA,cAAA,OAAKI,MAAO,CAACC,OAAQ,OAAQC,QAAS,OAAQC,cAAe,WAC3DP,EAAAA,cAAA,OAAKI,MAAO,CACVI,UAAW,OACXF,QAAS,OAAQG,WAAY,SAAUC,eAAgB,SACvDC,UAAW,SACXC,WAAY,yBACZC,SAAU,OACVC,WAAY,gCACX,qCAGHd,EAAAA,cAAA,OAAKI,MAAO,CAACW,KAAM,EAAGT,QAAS,OAAQU,IAAK,OAAQP,WAAY,WAC9DT,EAAAA,cAACC,EAAAA,GAAAA,GAAiB,CAChBG,MAAO,CAACa,MAAO,QAASC,KAAM,QAASC,UAAW,kBAClDC,IAAI,gCAENpB,EAAAA,cAAA,MAAII,MAAO,CAACW,KAAM,IAChBf,EAAAA,cAAA,UAAI,mCACJA,EAAAA,cAAA,UAAI,mCACJA,EAAAA,cAAA,UAAI,sDAEFA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,6CACJA,EAAAA,cAAA,UAAI,2CAGRA,EAAAA,cAAA,UAAI,uCACJA,EAAAA,cAAA,UAAI,4BACJA,EAAAA,cAAA,UAAI,WAUd,kBAAkBC,EAAAA,GAAAA,qBAClB,kBAAkBA,EAAAA,GAAAA,qC,mIC3Cb,MAAMoB,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEC,IAAiB,OAAZC,GAAMD,EAChB,MAAM,EAACR,EAAY,EAACU,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCd,EAAc,EAChBU,EAAeV,EAAc,IAE7Be,EAAAA,EAAAA,IAASV,GAEX,MACF,IAAK,QACL,IAAK,aACCL,EAAcO,EAChBG,EAAeV,EAAc,IAE7Be,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,KACCO,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACZ,IAEGtB,EAAAA,cAAC0B,EAAgB2B,OAAAC,OAAA,GAAKvB,EAAK,CAAET,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2024-devbcn-full-stack-reactive-application/slide-020-agenda.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport {DevBcn2024} from '../../../components';\n\nconst Slide020 = () => {\n  return (\n    <DevBcn2024.SlideTemplate slide={2} title='Agenda'>\n      <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n        <div style={{\n          marginTop: '5rem',\n          display: 'flex', alignItems: 'center', justifyContent: 'center',\n          textAlign: 'center',\n          fontFamily: '\\'Lionello\\', sans-serif',\n          fontSize: '5rem',\n          textShadow: '0rem -2rem 0.9rem #FFFFFF66'\n        }}>\n          How to consume events reactively?\n        </div>\n        <div style={{flex: 1, display: 'flex', gap: '0rem', alignItems: 'center'}}>\n          <DevBcn2024.DevBcn\n            style={{width: '30rem', fill: 'white', transform: 'rotate(270deg)'}}\n            alt='An image of the DevBcn logo'\n          />\n          <ul style={{flex: 1}}>\n            <li>What is a Reactive Application?</li>\n            <li>Kubernetes as an Event Producer</li>\n            <li>\n              Case study: Yet Another Kubernetes Dashboard (YAKD)\n              <ul>\n                <li>Building a resilient Backend with Quarkus</li>\n                <li>Frontend: Consuming Events Reactively</li>\n              </ul>\n            </li>\n            <li>Advantages of Reactive Applications</li>\n            <li>Tradeoffs and Challenges</li>\n            <li>Q&A</li>\n          </ul>\n        </div>\n\n      </div>\n    </DevBcn2024.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide020,\n  `/presentations/${DevBcn2024.SLUG}/slide-010-about`,\n  `/presentations/${DevBcn2024.SLUG}/slide-030-reactive-applications`);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","Slide020","React","DevBcn2024","slide","title","style","height","display","flexDirection","marginTop","alignItems","justifyContent","textAlign","fontFamily","fontSize","textShadow","flex","gap","width","fill","transform","alt","visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","_ref","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}