"use strict";(self.webpackChunk_marcnuri_presentations=self.webpackChunk_marcnuri_presentations||[]).push([[4687],{83452:function(e,t,n){n.d(t,{OP:function(){return o},VS:function(){return a},m$:function(){return i}});var r=n(96540),l=n(64810);const i=e=>t=>e<t?"hidden":"visible",a=e=>t=>e!==t?"hidden":"visible",o=e=>t=>e>t?"hidden":"visible";t.Ay=function(e,t,n,i){return void 0===i&&(i=1),a=>{let{...o}=a;const{0:s,1:c}=(0,r.useState)(1),u=e=>{switch(e.key){case"Left":case"ArrowLeft":s>1?c(s-1):(0,l.oo)(t);break;case"Right":case"ArrowRight":s<i?c(s+1):(0,l.oo)(n);break;case"f":(e.metaKey||e.ctrlKey)&&(document.body.requestFullscreen({navigationUI:"hide"}).catch(console.error),e.preventDefault());break;case"Esc":case"Escape":document.fullscreenElement&&document.exitFullscreen().catch(console.error),(0,l.oo)("/")}};return(0,r.useEffect)(()=>(document.addEventListener("keydown",u,!1),()=>{document.removeEventListener("keydown",u,!1)}),[s]),r.createElement(e,Object.assign({},o,{currentStep:s}))}}},84605:function(e,t,n){n.r(t);var r=n(96540),l=n(83452),i=n(8268);const a=e=>{let{Svg:t,children:n}=e;return r.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",gap:"1rem",padding:"2rem",borderRadius:"2rem",width:"20rem",height:"20rem",background:i.us.t9,color:i.us.hN,fontSize:"1.8rem",fill:"white",textAlign:"center"}},r.createElement(t,null),n)};t.default=(0,l.Ay)(e=>{let{currentStep:t}=e;return r.createElement(i.us.G0,{slide:21,title:"Implementing MCP Servers: Model Size"},r.createElement(i.us.Ex,{currentStep:t,style:{gap:"2rem",flexDirection:"row",justifyContent:"space-evenly"}},r.createElement(a,{Svg:i.us.rK},"Small Language Model"),r.createElement(a,{Svg:i.us.K},"Large Language Model")),r.createElement(i.us.Ex,{currentStep:t},r.createElement(i.us.uZ,null,'Run a Pod with the container image "nginx" and expose port 80')),r.createElement(i.us.Ex,{currentStep:t,style:{justifyContent:"space-evenly"}},r.createElement("h2",{style:{display:"flex",alignItems:"center",gap:"2rem"}},r.createElement(i.us.K,{style:{width:"3rem",fill:"white"}})," Kubernetes Expert / LLM"),r.createElement("h2",{style:{display:"flex",alignItems:"center",gap:"2rem"}},r.createElement(i.us.rK,{style:{width:"3.5rem",fill:"white"}})," English Speaker that can use tools / SLM (function calling)")),r.createElement(i.us.Ex,{currentStep:t,style:{gap:"4rem"}},r.createElement(i.us.uZ,null,'Run a Pod with the container image "nginx" and expose port 80'),r.createElement("div",null,r.createElement("div",{style:{color:"lime"}},r.createElement("code",null,"kubernetes_resource_create_or_update($resource)")),r.createElement("div",{style:{marginTop:"1rem",fontStyle:"italic",fontSize:"2rem"}},"Create or update a Kubernetes resource in the current cluster by providing a YAML or JSON representation of the resource"),r.createElement("div",{style:{marginTop:"1rem",fontStyle:"italic",fontSize:"2rem"}},r.createElement("span",{style:{color:"lime"}},"$resource: "),"A JSON or YAML containing a representation of the Kubernetes resource. Should include top-level fields such as apiVersion, kind, metadata, and spec"))),r.createElement(i.us.Ex,{currentStep:t,style:{gap:"2rem",flexDirection:"row",justifyContent:"space-evenly"}},r.createElement(a,{Svg:i.us.rK},"❌ SLM"),r.createElement(a,{Svg:i.us.K},"✅ LLM")),r.createElement(i.us.Ex,{currentStep:t,style:{gap:"4rem"}},r.createElement(i.us.uZ,null,'Run a Pod with the container image "nginx" and expose port 80'),r.createElement("div",null,r.createElement("div",{style:{color:"lime"}},r.createElement("code",null,"pods_run($image, $port)")),r.createElement("div",{style:{marginTop:"1rem",fontStyle:"italic",fontSize:"2rem"}},"Run a Kubernetes Pod in the current namespace with the provided container image and optional port"),r.createElement("div",{style:{marginTop:"1rem",fontStyle:"italic",fontSize:"2rem"}},r.createElement("span",{style:{color:"lime"}},"$image: "),"Container Image to run in the Pod"),r.createElement("div",{style:{marginTop:"1rem",fontStyle:"italic",fontSize:"2rem"}},r.createElement("span",{style:{color:"lime"}},"$port: "),"TCP/IP port to expose from the Pod container (Optional, no port exposed if not provided)"))),r.createElement(i.us.Ex,{currentStep:t,style:{gap:"2rem",flexDirection:"row",justifyContent:"space-evenly"}},r.createElement(a,{Svg:i.us.rK},"✅ SLM"),r.createElement(a,{Svg:i.us.K},"✅ LLM")),r.createElement(i.us.Ex,{currentStep:t},r.createElement("ul",null,r.createElement("li",null,"Use MCP to encapsulate the task complexity"),r.createElement("li",null,"Reduce costs by being able to use smaller models"),r.createElement("li",null,"Enable edge devices to run AI Assistants with limited resources"))),r.createElement("div",{style:{position:"fixed",left:"1rem",bottom:"1rem",fontSize:"1rem",fontStyle:"italic",lineHeight:"1.5rem"}},"https://blog.marcnuri.com/giving-superpowers-to-small-language-models-with-mcp"))},`/presentations/${i.us.OZ}/slide-200-mcp-servers-distribution`,`/presentations/${i.us.OZ}/slide-220-mcp-servers-tool-budget`,9)}}]);
//# sourceMappingURL=component---src-pages-presentations-2025-devbcn-model-context-protocol-servers-slide-210-mcp-servers-model-size-jsx-87cd17e25dde2b780b76.js.map