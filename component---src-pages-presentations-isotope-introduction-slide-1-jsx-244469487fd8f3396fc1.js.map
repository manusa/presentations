{"version":3,"file":"component---src-pages-presentations-isotope-introduction-slide-1-jsx-244469487fd8f3396fc1.js","mappings":"gNAAA,EAAe,IAA0B,4DC2BzC,OAAeA,EAAAA,EAAAA,IArBAC,IAAoB,IAAnB,YAACC,GAAYD,EAC3B,MAAME,GAAuBC,EAAAA,EAAAA,IAAyBF,GACtD,OACEG,EAAAA,cAAA,OAAKC,UAAW,gBACdD,EAAAA,cAAA,OAAKC,UAAW,SAAS,QACzBD,EAAAA,cAAA,OAAKC,UAAW,iBAAiBD,EAAAA,cAAA,OAAKE,IAAKC,KAC3CH,EAAAA,cAAA,MAAIC,UAAW,WACbD,EAAAA,cAAA,MAAIC,UAAWH,EAAqB,IAAI,cAEtCE,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,MAAIC,UAAWH,EAAqB,IAAI,sBAG5CE,EAAAA,cAAA,MAAIC,UAAWH,EAAqB,IAAI,8BACxCE,EAAAA,cAAA,MAAIC,UAAWH,EAAqB,IAAI,wBAMX,sCAAuC,6CAA8C,E,mICxBnH,MAAMC,EAA2BF,GAAeO,GACnDP,EAAcO,EAAQ,SAAW,UAExBC,EAAyBR,GAAeO,GACjDP,IAAgBO,EAAQ,SAAW,UAE1BE,EAA4BT,GAAeO,GACpDP,EAAcO,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEd,IAAiB,OAAZe,GAAMf,EAChB,MAAM,EAACC,EAAY,EAACe,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCnB,EAAc,EAChBe,EAAef,EAAc,IAE7BoB,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCX,EAAca,EAChBE,EAAef,EAAc,IAE7BoB,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACjB,IAEGG,EAAAA,cAACO,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAEd,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/isotope-introduction/assets/webmail-trend.png","webpack://@marcnuri/presentations/./src/pages/presentations/isotope-introduction/slide1.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/webmail-trend-18ed4434f52a8005f354739deeef852e.png\";","import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport webMailTrend from './assets/webmail-trend.png';\nimport './slide1.scss';\n\n\nconst Slide1 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  return (\n    <div className={'slide slide1'}>\n      <div className={'title'}>Why?</div>\n      <div className={'webmail-trend'}><img src={webMailTrend}/></div>\n      <ul className={'content'}>\n        <li className={classNameVisibleFrom(2)}>\n          Big Brother\n          <ul>\n            <li>Privacy</li>\n            <li className={classNameVisibleFrom(3)}>Missing features</li>\n          </ul>\n        </li>\n        <li className={classNameVisibleFrom(4)}>Alternatives lack features</li>\n        <li className={classNameVisibleFrom(5)}>Personal interest</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default slideControls(Slide1, '/presentations/isotope-introduction', '/presentations/isotope-introduction/slide2', 5);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","_ref","currentStep","classNameVisibleFrom","visibleClassNameFromStep","React","className","src","webMailTrend","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}