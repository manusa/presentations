{"version":3,"file":"component---src-pages-presentations-2023-eclipsecon-helm-for-java-developers-slide-150-jsx-08f4e99e3ae422e62f90.js","mappings":"qLAIA,MAAMA,EAAOC,IAAA,IAAC,KAACC,EAAI,KAAEC,EAAI,SAAEC,GAASH,EAAA,OAClCI,EAAAA,cAAA,KAAGH,KAAMA,EAAMI,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAASH,EAAAA,cAAA,KAAGI,UAAWN,IAAQ,IAAEC,IAmBzF,WAAeM,EAAAA,EAAAA,IAjBEC,IACfN,EAAAA,cAACO,EAAAA,GAAAA,GAA4B,CAACC,kBAAkB,GAC9CR,EAAAA,cAAA,MAAIC,MAAO,CAACQ,SAAU,OAAQC,OAAQ,WAAYC,QAAS,EAAGR,MAAO,YAAY,OACjFH,EAAAA,cAAA,OAAKC,MAAO,CAACW,QAAS,OAAQC,cAAe,SAAUC,IAAK,OAAQL,SAAU,SAC5ET,EAAAA,cAACL,EAAI,CAACE,KAAK,mCAAmCC,KAAK,iBAAiB,4BACpEE,EAAAA,cAACL,EAAI,CAACE,KAAK,8BAA8BC,KAAK,kBAAiB,aAC/DE,EAAAA,cAACL,EAAI,CAACE,KAAK,gCAAgCC,KAAK,eAAc,0BAC9DE,EAAAA,cAACe,EAAAA,GAAS,CAACd,MAAO,CAACe,OAAQ,SAAUC,UAAU,UAAUC,UAAU,WAErElB,EAAAA,cAAA,OAAKC,MAAO,CAACkB,UAAW,QAASR,QAAS,gBAAiBF,SAAU,WACnET,EAAAA,cAACL,EAAI,CAACE,KAAM,oDAAoDU,EAAAA,GAAAA,OAAwB,oDACpCA,EAAAA,GAAAA,MAOxD,kBAAkBA,EAAAA,GAAAA,eAClB,kBAAkBA,EAAAA,GAAAA,M,mICvBb,MAAMa,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEhC,IAAiB,OAAZiC,GAAMjC,EAChB,MAAM,EAACyB,EAAY,EAACS,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCb,EAAc,EAChBS,EAAeT,EAAc,IAE7Bc,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCL,EAAcO,EAChBE,EAAeT,EAAc,IAE7Bc,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACX,IAEGrB,EAAAA,cAACyB,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAER,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2023-eclipsecon-helm-for-java-developers/slide-150.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport {EclipseCon2023, JKubeLogo} from '../../../components';\n\nconst Link = ({href, icon, children}) =>\n  <a href={href} style={{textDecoration: 'none', color: '#AAA'}}><i className={icon} /> {children}</a>\n\nconst Slide150 = () => (\n  <EclipseCon2023.TitleTemplate titleBandVisible={false}>\n    <h2 style={{fontSize: '8rem', margin: '0 0 4rem', padding: 0, color: '#FAFAFA'}}>Q&A</h2>\n    <div style={{display: 'flex', flexDirection: 'column', gap: '1rem', fontSize: '3rem'}}>\n      <Link href='https://github.com/eclipse/jkube' icon='fab fa-github' >github.com/eclipse/jkube</Link>\n      <Link href='https://twitter.com/jkubeio' icon='fab fa-twitter'> @jkubeio</Link>\n      <Link href='https://www.eclipse.org/jkube' icon='fas fa-home'> www.eclipse.org/jkube</Link>\n      <JKubeLogo style={{height: '10rem'}} iconColor='#2285f7' textColor='white' />\n    </div>\n    <div style={{alignSelf: 'start', padding: '2rem 0 0 1rem', fontSize: '1.5rem'}}>\n      <Link href={`https://presentations.marcnuri.com/presentations/${EclipseCon2023.SLUG}/`}>\n        https://presentations.marcnuri.com/presentations/{EclipseCon2023.SLUG}\n      </Link>\n    </div>\n  </EclipseCon2023.TitleTemplate>\n);\n\nexport default slideControls(Slide150,\n  `/presentations/${EclipseCon2023.SLUG}/slide-140`,\n  `/presentations/${EclipseCon2023.SLUG}/`);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["Link","_ref","href","icon","children","React","style","textDecoration","color","className","slideControls","Slide150","EclipseCon2023","titleBandVisible","fontSize","margin","padding","display","flexDirection","gap","JKubeLogo","height","iconColor","textColor","alignSelf","visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}