{"version":3,"file":"component---src-pages-presentations-2025-devbcn-model-context-protocol-servers-slide-060-problem-statement-2-solved-jsx-0d16752e9cc223e9dd4c.js","mappings":"oPAGO,MAAMA,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEC,IAAiB,OAAZC,GAAMD,EAChB,MAAM,EAACR,EAAY,EAACU,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCd,EAAc,EAChBU,EAAeV,EAAc,IAE7Be,EAAAA,EAAAA,IAASV,GAEX,MACF,IAAK,QACL,IAAK,aACCL,EAAcO,EAChBG,EAAeV,EAAc,IAE7Be,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,KACCO,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACZ,IAEG+B,EAAAA,cAAC3B,EAAgB4B,OAAAC,OAAA,GAAKxB,EAAK,CAAET,YAAaA,KAErD,C,oECpBA,WAAekC,EAAAA,EAAAA,IAlCE1B,IAAoB,IAAnB,YAACR,GAAYQ,EAC7B,MAAM2B,GAAuBpC,EAAAA,EAAAA,IAAyBC,GAEtD,OACE+B,EAAAA,cAACK,EAAAA,GAAAA,GAAwB,CAACC,MAAO,EAAGC,MAAM,0CACxCP,EAAAA,cAACK,EAAAA,GAAAA,GAAkB,KACjBL,EAAAA,cAACK,EAAAA,GAAAA,GAA6B,KAAC,kFAG/BL,EAAAA,cAACK,EAAAA,GAAAA,GAAkC,KACjCL,EAAAA,cAAA,cAAQ,2BAAgC,OAAIA,EAAAA,cAAA,cAAQ,0BAA+B,0DAGrFA,EAAAA,cAACK,EAAAA,GAAAA,GAA6B,KAXrB,qCAYTL,EAAAA,cAACK,EAAAA,GAAAA,GAAiC,CAACG,UAAWJ,EAAqB,GAAIK,SAAS,kBAChFT,EAAAA,cAACK,EAAAA,GAAAA,GAAkC,CAACG,UAAWJ,EAAqB,IAAI,gEACTJ,EAAAA,cAAA,cAAQ,oBAAyB,kDAGhGA,EAAAA,cAACK,EAAAA,GAAAA,GAA0B,CACzBK,UAAU,EACVC,gBAAgB,qBAGH,IAAhB1C,GAAqB+B,EAAAA,cAAA,OACpBY,IAAKP,EAAAA,GAAAA,GACLQ,MAAO,CACLC,SAAU,WAAYC,IAAK,MAAOC,KAAM,MAAOC,UAAW,wBAAyBC,MAAO,OAAQC,OAAQ,MAAOC,UAAW,eAQpI,kBAAkBf,EAAAA,GAAAA,mCAClB,kBAAkBA,EAAAA,GAAAA,mCAClB,E","sources":["webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx","webpack://@marcnuri/presentations/./src/pages/presentations/2025-devbcn-model-context-protocol-servers/slide-060-problem-statement-2-solved.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n","import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport {DevBcn2025} from '../../../components';\n\nconst Slide060 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  const prompt = `Can you order the tickets for me?`;\n  return (\n    <DevBcn2025.SlideTemplate slide={6} title='Problem Statement (II): Real Assistant'>\n      <DevBcn2025.ChatGpt>\n        <DevBcn2025.ChatGptUserMessage>\n          I'll be in Barcelona next week, what's the best time to visit Sagrada Familia?\n        </DevBcn2025.ChatGptUserMessage>\n        <DevBcn2025.ChatGptAssistantMessage>\n          <strong>Early morning (9-10 AM)</strong> or <strong>late afternoon (4-6PM)</strong> on weekdays.\n          Avoid weekends and holidays if possible.\n        </DevBcn2025.ChatGptAssistantMessage>\n        <DevBcn2025.ChatGptUserMessage>{prompt}</DevBcn2025.ChatGptUserMessage>\n        <DevBcn2025.ChatGptToolCallMessage className={classNameVisibleFrom(2)} toolName='tickets_order' />\n        <DevBcn2025.ChatGptAssistantMessage className={classNameVisibleFrom(3)}>\n          I've successfully booked your tickets for Sagrada Familia on <strong>Thursday at 9 AM</strong>.\n          You'll receive a confirmation email shortly.\n        </DevBcn2025.ChatGptAssistantMessage>\n        <DevBcn2025.ChatGptComposer\n          hasTools={true}\n          placeHolderText='Reply to Hal...'\n        />\n      </DevBcn2025.ChatGpt>\n      {currentStep === 4 && <img\n        src={DevBcn2025.successKid}\n        style={{\n          position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', width: '100%', height: '70%', objectFit: 'contain'\n        }}\n      />}\n    </DevBcn2025.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide060,\n  `/presentations/${DevBcn2025.SLUG}/slide-050-problem-statement-2`,\n  `/presentations/${DevBcn2025.SLUG}/slide-070-problem-statement-3`,\n  4);\n"],"names":["visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","_ref","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","React","Object","assign","slideControls","classNameVisibleFrom","DevBcn2025","slide","title","className","toolName","hasTools","placeHolderText","src","style","position","top","left","transform","width","height","objectFit"],"sourceRoot":""}