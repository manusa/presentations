{"version":3,"file":"component---src-pages-presentations-2025-devbcn-model-context-protocol-servers-slide-080-problem-statement-3-solved-jsx-5c76789f20d373663d4e.js","mappings":"qLA2BA,WAAeA,EAAAA,EAAAA,IAvBEC,IAAoB,IAAnB,YAACC,GAAYD,EAC7B,MAAME,GAAuBC,EAAAA,EAAAA,IAAyBF,GAEtD,OACEG,EAAAA,cAACC,EAAAA,GAAAA,GAAwB,CAACC,MAAO,EAAGC,MAAM,8CACxCH,EAAAA,cAACC,EAAAA,GAAAA,GAAkB,KACjBD,EAAAA,cAACC,EAAAA,GAAAA,GAA6B,KAJrB,qFAKTD,EAAAA,cAACC,EAAAA,GAAAA,GAAiC,CAACG,UAAWN,EAAqB,GAAIO,SAAS,eAChFL,EAAAA,cAACC,EAAAA,GAAAA,GAAiC,CAACG,UAAWN,EAAqB,GAAIO,SAAS,iBAChFL,EAAAA,cAACC,EAAAA,GAAAA,GAAkC,CAACG,UAAWN,EAAqB,IAAI,mLAGtEE,EAAAA,cAAA,WAAK,uDAEPA,EAAAA,cAACC,EAAAA,GAAAA,GAA0B,CACzBK,UAAU,EACVC,gBAAgB,uBAQxB,kBAAkBN,EAAAA,GAAAA,mCAClB,kBAAkBA,EAAAA,GAAAA,yCAClB,E,mIC3BK,MAAMF,EAA2BF,GAAeW,GACnDX,EAAcW,EAAQ,SAAW,UAExBC,EAAyBZ,GAAeW,GACjDX,IAAgBW,EAAQ,SAAW,UAE1BE,EAA4Bb,GAAeW,GACpDX,EAAcW,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrElB,IAAiB,OAAZmB,GAAMnB,EAChB,MAAM,EAACC,EAAY,EAACmB,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCvB,EAAc,EAChBmB,EAAenB,EAAc,IAE7BwB,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCf,EAAciB,EAChBE,EAAenB,EAAc,IAE7BwB,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACrB,IAEGG,EAAAA,cAACW,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAElB,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2025-devbcn-model-context-protocol-servers/slide-080-problem-statement-3-solved.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport {DevBcn2025} from '../../../components';\n\nconst Slide080 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  const prompt = `I need a PostgreSQL database, can you deploy one for me in my Kubernetes cluster?`;\n  return (\n    <DevBcn2025.SlideTemplate slide={8} title='Problem Statement (III): Specialized Tools'>\n      <DevBcn2025.ChatGpt>\n        <DevBcn2025.ChatGptUserMessage>{prompt}</DevBcn2025.ChatGptUserMessage>\n        <DevBcn2025.ChatGptToolCallMessage className={classNameVisibleFrom(2)} toolName='pod_create' />\n        <DevBcn2025.ChatGptToolCallMessage className={classNameVisibleFrom(3)} toolName='port_forward' />\n        <DevBcn2025.ChatGptAssistantMessage className={classNameVisibleFrom(4)}>\n          I've created a PostgreSQL pod in your Kubernetes cluster and forwarded the port to your local machine.\n          You can now connect to it using the following database connection string:\n          <pre>postgres://user:password@localhost:5432/mydatabase</pre>\n        </DevBcn2025.ChatGptAssistantMessage>\n        <DevBcn2025.ChatGptComposer\n          hasTools={true}\n          placeHolderText='Reply to Hal...'\n        />\n      </DevBcn2025.ChatGpt>\n    </DevBcn2025.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide080,\n  `/presentations/${DevBcn2025.SLUG}/slide-070-problem-statement-3`,\n  `/presentations/${DevBcn2025.SLUG}/slide-090-problem-statement-summary`,\n  4);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","_ref","currentStep","classNameVisibleFrom","visibleClassNameFromStep","React","DevBcn2025","slide","title","className","toolName","hasTools","placeHolderText","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}