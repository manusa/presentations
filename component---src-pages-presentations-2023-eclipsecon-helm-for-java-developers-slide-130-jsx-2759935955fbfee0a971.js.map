{"version":3,"file":"component---src-pages-presentations-2023-eclipsecon-helm-for-java-developers-slide-130-jsx-2759935955fbfee0a971.js","mappings":"oLAIA,MAAMA,EAAUC,IAAA,IAAC,KAACC,EAAI,UAAEC,EAAY,GAAE,UAAEC,EAAY,IAAGH,EAAA,OACrDI,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAIC,UAAU,QAAQJ,GACtBG,EAAAA,cAAA,UAAKF,GACLE,EAAAA,cAAA,UAAKD,KAgCT,WAAeG,EAAAA,EAAAA,IA7BEC,IAEbH,EAAAA,cAACI,EAAAA,GAAAA,GAA4B,CAACC,MAAO,GAAIC,MAAM,gCAC7CN,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAOO,MAAO,CAACC,MAAO,QACpBR,EAAAA,cAAA,aACAA,EAAAA,cAAA,UACEA,EAAAA,cAAA,WACAA,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,UAAI,gBAGNA,EAAAA,cAAA,aACAA,EAAAA,cAACL,EAAO,CAACE,KAAK,QAAQC,UAAU,IAAIC,UAAU,MAC9CC,EAAAA,cAACL,EAAO,CAACE,KAAK,OAAOC,UAAU,KAAKC,UAAU,MAC9CC,EAAAA,cAACL,EAAO,CAACE,KAAK,WAAWC,UAAU,IAAIC,UAAU,OACjDC,EAAAA,cAACL,EAAO,CAACE,KAAK,QAAQC,UAAU,IAAIC,UAAU,OAC9CC,EAAAA,cAACL,EAAO,CAACE,KAAK,OAAOC,UAAU,IAAIC,UAAU,MAC7CC,EAAAA,cAACL,EAAO,CAACE,KAAK,YAAYC,UAAU,KAAKC,UAAU,MACnDC,EAAAA,cAACL,EAAO,CAACE,KAAK,WAAWC,UAAU,IAAIC,UAAU,OACjDC,EAAAA,cAACL,EAAO,CAACE,KAAK,MAAMC,UAAU,IAAIC,UAAU,OAC5CC,EAAAA,cAACL,EAAO,CAACE,KAAK,QAAQC,UAAU,IAAIC,UAAU,OAC9CC,EAAAA,cAACL,EAAO,CAACE,KAAK,aAAaC,UAAU,IAAIC,UAAU,SAQzD,kBAAkBK,EAAAA,GAAAA,eAClB,kBAAkBA,EAAAA,GAAAA,e,mICvCb,MAAMK,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrErB,IAAiB,OAAZsB,GAAMtB,EAChB,MAAM,EAACc,EAAY,EAACS,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCb,EAAc,EAChBS,EAAeT,EAAc,IAE7Bc,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCL,EAAcO,EAChBE,EAAeT,EAAc,IAE7Bc,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACX,IAEGV,EAAAA,cAACc,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAER,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2023-eclipsecon-helm-for-java-developers/slide-130.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport {EclipseCon2023} from '../../../components';\n\nconst GoalRow = ({goal, innerLoop = '', outerLoop = ''}) =>\n  <tr>\n    <td className='left'>{goal}</td>\n    <td>{innerLoop}</td>\n    <td>{outerLoop}</td>\n  </tr>;\n\nconst Slide130 = () => {\n  return (\n    <EclipseCon2023.SlideTemplate slide={13} title='What is Eclipse JKube? (III)'>\n      <h2>Features</h2>\n      <table style={{width: '80%'}}>\n        <thead>\n        <tr>\n          <th />\n          <th>Inner Loop</th>\n          <th>Outer Loop</th>\n        </tr>\n        </thead>\n        <tbody>\n        <GoalRow goal='build' innerLoop='✅' outerLoop='✅'/>\n        <GoalRow goal='push' innerLoop='✔️' outerLoop='✅'/>\n        <GoalRow goal='resource' innerLoop='✅' outerLoop='✅️'/>\n        <GoalRow goal='apply' innerLoop='✅' outerLoop='✅️'/>\n        <GoalRow goal='helm' innerLoop='❌' outerLoop='✅'/>\n        <GoalRow goal='helm-push' innerLoop='❌️' outerLoop='✅'/>\n        <GoalRow goal='undeploy' innerLoop='✅' outerLoop='✔️'/>\n        <GoalRow goal='log' innerLoop='✅' outerLoop='✔️'/>\n        <GoalRow goal='watch' innerLoop='✅' outerLoop='❌️'/>\n        <GoalRow goal='remote-dev' innerLoop='✅' outerLoop='❌'/>\n        </tbody>\n      </table>\n    </EclipseCon2023.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide130,\n  `/presentations/${EclipseCon2023.SLUG}/slide-120`,\n  `/presentations/${EclipseCon2023.SLUG}/slide-140`);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["GoalRow","_ref","goal","innerLoop","outerLoop","React","className","slideControls","Slide130","EclipseCon2023","slide","title","style","width","visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}