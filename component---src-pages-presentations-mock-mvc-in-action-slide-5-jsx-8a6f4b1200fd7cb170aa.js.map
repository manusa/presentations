{"version":3,"file":"component---src-pages-presentations-mock-mvc-in-action-slide-5-jsx-8a6f4b1200fd7cb170aa.js","mappings":"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","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/mock-mvc-in-action/slide5.jsx","webpack://@marcnuri/presentations/./node_modules/react-syntax-highlighter/dist/esm/styles/hljs/androidstudio.js","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls, {\n  visibleClassNameInStep\n} from '../../../components/slide-controls/slide-controls';\nimport {Code} from '../../../components';\nimport {androidstudio} from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport './slide5.scss';\n\nconst Slide5 = ({currentStep}) => {\n  const classNameVisibleIn = visibleClassNameInStep(currentStep);\n  return (\n    <div className={'slide slide5'}>\n      <div className={'title'}>100% Code Coverage</div>\n      <div className={'content'}>\n        <Code\n          className={classNameVisibleIn(2)}\n          language='java' style={androidstudio}\n        >{`\n          @PutMapping(\n              path = \"/{externalId}\",\n              headers = {\"Special-Header=XML Babel\"},\n              consumes = MediaType.APPLICATION_JSON_UTF8_VALUE,\n              produces = MediaType.APPLICATION_XML_VALUE)\n          @ResponseStatus(HttpStatus.OK)\n          public Beer updateBeerAsXML(\n              @PathVariable(\"externalId\") String externalId,\n              @Validated @RequestBody Beer beer) {\n          \n            return beerService.updateBeer(externalId, beer);\n          }\n        `}</Code>\n        <Code\n          className={classNameVisibleIn(3)}\n          language={'java'} style={androidstudio}\n        >{`\n          @Test\n          public void updateBeerAsXML_validBeer_shouldReturnUpdatedBeer(){\n            beerResource.updateBeerAsXML(\"OST.01\", new Beer());\n            verify(mockBeerService, times(1))\n                .updateBeer(Mockito.eq(\"OST.01\"), Mockito.any(Beer.class));\n          }\n        `}</Code>\n        <Code\n          className={classNameVisibleIn(4)}\n          language='java' style={androidstudio}\n        >{`\n          @PutMapping(\n              path = \"/{externalId}\",\n              headers = {\"Special-Header=XML Babel\"},\n              consumes = MediaType.APPLICATION_JSON_UTF8_VALUE,\n              produces = MediaType.APPLICATION_XML_VALUE)\n          @ResponseStatus(HttpStatus.OK)\n          public Beer updateBeerAsXML(\n              @PathVariable(\"externalId\") String externalId,\n              @Validated @RequestBody Beer beer) {\n          \n            return beerService.updateBeer(externalId, beer);\n          }\n        `}</Code>\n        <Code\n          className={classNameVisibleIn(5)}\n          language='java' style={androidstudio}\n          lineProps={line => ([1, 2, 3, 4, 5, 6, 8, 9].includes(line) ? {style: {backgroundColor: 'rgba(30, 255, 0, 0.36)'}} : {})}\n        >{`\n          @PutMapping(\n              path = \"/{externalId}\",\n              headers = {\"Special-Header=XML Babel\"},\n              consumes = MediaType.APPLICATION_JSON_UTF8_VALUE,\n              produces = MediaType.APPLICATION_XML_VALUE)\n          @ResponseStatus(HttpStatus.OK)\n          public Beer updateBeerAsXML(\n              @PathVariable(\"externalId\") String externalId,\n              @Validated @RequestBody Beer beer) {\n          \n            return beerService.updateBeer(externalId, beer);\n          }\n        `}</Code>\n      </div>\n    </div>\n  );\n};\n\nexport default slideControls(Slide5, '/presentations/mock-mvc-in-action/slide4', '/presentations/mock-mvc-in-action/slide6', 5);\n","export default {\n  \"hljs\": {\n    \"color\": \"#a9b7c6\",\n    \"background\": \"#282b2e\",\n    \"display\": \"block\",\n    \"overflowX\": \"auto\",\n    \"padding\": \"0.5em\"\n  },\n  \"hljs-number\": {\n    \"color\": \"#6897BB\"\n  },\n  \"hljs-literal\": {\n    \"color\": \"#6897BB\"\n  },\n  \"hljs-symbol\": {\n    \"color\": \"#6897BB\"\n  },\n  \"hljs-bullet\": {\n    \"color\": \"#6897BB\"\n  },\n  \"hljs-keyword\": {\n    \"color\": \"#cc7832\"\n  },\n  \"hljs-selector-tag\": {\n    \"color\": \"#cc7832\"\n  },\n  \"hljs-deletion\": {\n    \"color\": \"#cc7832\"\n  },\n  \"hljs-variable\": {\n    \"color\": \"#629755\"\n  },\n  \"hljs-template-variable\": {\n    \"color\": \"#629755\"\n  },\n  \"hljs-link\": {\n    \"color\": \"#629755\"\n  },\n  \"hljs-comment\": {\n    \"color\": \"#808080\"\n  },\n  \"hljs-quote\": {\n    \"color\": \"#808080\"\n  },\n  \"hljs-meta\": {\n    \"color\": \"#bbb529\"\n  },\n  \"hljs-string\": {\n    \"color\": \"#6A8759\"\n  },\n  \"hljs-attribute\": {\n    \"color\": \"#6A8759\"\n  },\n  \"hljs-addition\": {\n    \"color\": \"#6A8759\"\n  },\n  \"hljs-section\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"hljs-title\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"hljs-type\": {\n    \"color\": \"#ffc66d\"\n  },\n  \"hljs-name\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"hljs-selector-id\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"hljs-selector-class\": {\n    \"color\": \"#e8bf6a\"\n  },\n  \"hljs-emphasis\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-strong\": {\n    \"fontWeight\": \"bold\"\n  }\n};","import React from 'react';\nimport {navigate} from 'gatsby';\n\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentStep: 1\n      };\n      this.handleOnKeyDown = this.onKeyDown.bind(this);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} currentStep={this.state.currentStep} />;\n    }\n\n    componentDidMount() {\n      document.addEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    onKeyDown(event) {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (this.state.currentStep > 1) {\n            this.setState({currentStep: this.state.currentStep - 1});\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (this.state.currentStep < totalSteps) {\n            this.setState({currentStep: this.state.currentStep + 1});\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          navigate('/');\n          break;\n        default:\n      }\n    }\n  };\n}\n\nexport default slideControls;\n"],"names":["slideControls","_ref","currentStep","classNameVisibleIn","visibleClassNameInStep","React","className","Code","language","style","androidstudio","lineProps","line","includes","backgroundColor","visibleClassNameFromStep","step","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","_React$Component","_class","props","_this","call","state","handleOnKeyDown","onKeyDown","bind","_inheritsLoose","_proto","prototype","render","Object","assign","this","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","key","setState","navigate"],"sourceRoot":""}