{"version":3,"file":"component---src-pages-presentations-eclipse-jkube-2020-bcn-jug-slide-020-jsx-a04f86a7f47317208a55.js","mappings":"wLAsBA,WAAeA,EAAAA,EAAAA,IAlBEC,IACfC,EAAAA,cAACC,EAAAA,QAAa,CAACC,MAAO,EAAGC,MAAM,UAC7BH,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,oDACJA,EAAAA,cAAA,UAAI,0BACJA,EAAAA,cAAA,UAAI,qCAEFA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,uCACJA,EAAAA,cAAA,UAAI,2BACJA,EAAAA,cAAA,UAAI,4CAGRA,EAAAA,cAAA,UAAI,yBAK6B,sDAAuD,sD,mEChB9F,MAAMI,EAAgB,SAACC,GAAY,YAAL,IAAPA,IAAAA,EAAU,IAAQ,oCAAmCA,EAAU,KAAKA,IAAY,GAAI,EAsB3G,UApBsBC,IAAA,IAAC,MAACJ,EAAQ,EAAC,MAAEC,EAAQ,GAAE,SAAEI,GAASD,EAAA,OACtDN,EAAAA,cAAA,OAAKQ,UAAWJ,KACdJ,EAAAA,cAAA,OAAKQ,UAAWJ,EAAc,WAC5BJ,EAAAA,cAAA,OAAKQ,UAAU,SACZL,GAEHH,EAAAA,cAACS,EAAAA,GAAS,CAACD,UAAU,gBAEvBR,EAAAA,cAAA,OAAKQ,UAAWJ,EAAc,YAC3BG,GAEHP,EAAAA,cAAA,OAAKQ,UAAWJ,EAAc,WAC5BJ,EAAAA,cAAA,OAAKU,IAAKC,EAAAA,IACVX,EAAAA,cAAA,OAAKQ,UAAU,eACZN,K,mICnBF,MAAMU,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEd,IAAiB,OAAZe,GAAMf,EAChB,MAAM,EAACO,EAAY,EAACS,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCb,EAAc,EAChBS,EAAeT,EAAc,IAE7Bc,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,QACL,IAAK,aACCL,EAAcO,EAChBE,EAAeT,EAAc,IAE7Bc,EAAAA,EAAAA,IAASR,GAEX,MACF,IAAK,KACCM,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACX,IAEGb,EAAAA,cAACiB,EAAgB0B,OAAAC,OAAA,GAAKvB,EAAK,CAAER,YAAaA,KAErD,C,wBC1DA,IAAe,IAA0B,0D","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/eclipse-jkube-2020-bcn-jug/slide-020.jsx","webpack://@marcnuri/presentations/./src/pages/presentations/eclipse-jkube-2020-bcn-jug/components/slide-template.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx","webpack://@marcnuri/presentations/./src/pages/presentations/eclipse-jkube-2020-bcn-jug/assets/bcn-jug-logo.png"],"sourcesContent":["import React from 'react';\nimport SlideTemplate from './components/slide-template';\nimport slideControls from '../../../components/slide-controls/slide-controls';\n\nconst Slide020 = () => (\n  <SlideTemplate slide={2} title='Agenda'>\n    <ul>\n      <li>Cloud Native / Kubernetes / Microservices et al.</li>\n      <li>What is Eclipse JKube?</li>\n      <li>\n        Demos with Apache Kafka as Backend\n        <ul>\n          <li>Spring Boot 2.x - Deploying Kafdrop</li>\n          <li>Quarkus the easy way...</li>\n          <li>Spring Boot 1.x - We won't forget you!</li>\n        </ul>\n      </li>\n      <li>Future developments</li>\n    </ul>\n  </SlideTemplate>\n);\n\nexport default slideControls(Slide020, '/presentations/eclipse-jkube-2020-bcn-jug/slide-010', '/presentations/eclipse-jkube-2020-bcn-jug/slide-030');\n","import React from 'react';\nimport {JKubeLogo} from '../../../../components';\nimport bcnJugLogo from '../assets/bcn-jug-logo.png';\n\nimport '../styles/slide-template.scss';\n\nconst calcClassName = (element = '') => (`eclipse-jkube-2020-bcn-jug-slide${element ? `__${element}` : ''}`);\n\nconst SlideTemplate = ({slide = 0, title = '', children}) => (\n  <div className={calcClassName()}>\n    <div className={calcClassName('header')}>\n      <div className='title'>\n        {title}\n      </div>\n      <JKubeLogo className='jkube-logo' />\n    </div>\n    <div className={calcClassName('content')}>\n      {children}\n    </div>\n    <div className={calcClassName('footer')}>\n      <img src={bcnJugLogo} />\n      <div className='page-number'>\n        {slide}\n      </div>\n    </div>\n  </div>\n);\n\nexport default SlideTemplate;\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n","export default __webpack_public_path__ + \"static/bcn-jug-logo-324e23477630121f83a4631a0a49932b.png\";"],"names":["slideControls","Slide020","React","SlideTemplate","slide","title","calcClassName","element","_ref","children","className","JKubeLogo","src","bcnJugLogo","visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}