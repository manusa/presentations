{"version":3,"file":"component---src-pages-presentations-2023-eclipsecon-helm-for-java-developers-slide-060-jsx-383fe4a1121d20d9d9b9.js","mappings":"oLAmDA,WAAeA,EAAAA,EAAAA,IA/CEC,IAEbC,EAAAA,cAACC,EAAAA,GAAAA,GAA4B,CAACC,MAAO,EAAGC,MAAM,+DAC5CH,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,OAAKI,UAAU,aAAaC,MAAO,CAACC,QAAS,OAAQC,eAAgB,kBAEnEP,EAAAA,cAACQ,EAAAA,GAAI,CAACC,SAAS,QAAQ,4KASvBT,EAAAA,cAACQ,EAAAA,GAAI,CAACC,SAAS,QAAQ,gJAQvBT,EAAAA,cAACQ,EAAAA,GAAI,CAACC,SAAS,QAAQ,uJAQvBT,EAAAA,cAACQ,EAAAA,GAAI,CAACC,SAAS,QAAQ,qJASzBT,EAAAA,cAACQ,EAAAA,GAAI,CAACC,SAAS,SAAS,yDAQ5B,kBAAkBR,EAAAA,GAAAA,eAClB,kBAAkBA,EAAAA,GAAAA,e,mIClDb,MAAMS,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAkDrC,KAhDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GACrEC,IAAiB,OAAZC,GAAMD,EAChB,MAAM,EAACR,EAAY,EAACU,IAAkBC,EAAAA,EAAAA,UAAS,GACzCC,EAAmBC,IACvB,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCd,EAAc,EAChBU,EAAeV,EAAc,IAE7Be,EAAAA,EAAAA,IAASV,GAEX,MACF,IAAK,QACL,IAAK,aACCL,EAAcO,EAChBG,EAAeV,EAAc,IAE7Be,EAAAA,EAAAA,IAAST,GAEX,MACF,IAAK,KACCO,EAAMG,SAAWH,EAAMI,WACzBC,SAASC,KAAKC,kBAAkB,CAACC,aAAc,SAASC,MAAMC,QAAQC,OACtEX,EAAMY,kBAER,MACF,IAAK,MACL,IAAK,SACCP,SAASQ,mBACXR,SAASS,iBAAiBL,MAAMC,QAAQC,QAE1CT,EAAAA,EAAAA,IAAS,OAYf,OAPAa,EAAAA,EAAAA,WAAU,KACRV,SAASW,iBAAiB,UAAWjB,GAAiB,GAC/C,KACLM,SAASY,oBAAoB,UAAWlB,GAAiB,KAE1D,CAACZ,IAEGX,EAAAA,cAACe,EAAgB2B,OAAAC,OAAA,GAAKvB,EAAK,CAAET,YAAaA,KAErD,C","sources":["webpack://@marcnuri/presentations/./src/pages/presentations/2023-eclipsecon-helm-for-java-developers/slide-060.jsx","webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx"],"sourcesContent":["import React from 'react';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport {Code, EclipseCon2023} from '../../../components';\n\nconst Slide060 = () => {\n  return (\n    <EclipseCon2023.SlideTemplate slide={6} title='Deploying Java applications to Kubernetes - Challenges (II)'>\n      <h2>YAML files</h2>\n      <div className='yaml-files' style={{display: 'flex', justifyContent: 'space-between'}}>\n        {/* Note the extra-spaces in some of the docs to size them all equally*/}\n        <Code language='yaml'>{`\n          kind: Deployment    \n          metadata:\n            name: app\n          spec:\n            replicas: 1\n            selector:\n          # ...\n        `}</Code>\n        <Code language='yaml'>{`\n          kind: Service       \n          metadata:\n            name: app\n          spec:\n            ports:\n          # ...\n        `}</Code>\n        <Code language='yaml'>{`\n          kind: ConfigMap\n          metadata:\n            name: app\n          data:\n           application.yml: >-\n          # ...\n        `}</Code>\n        <Code language='yaml'>{`\n          kind: Secret        \n          metadata:\n            name: app\n          type: Opaque\n          data:\n          # ...\n        `}</Code>\n      </div>\n      <Code language='shell'>{`\n        $ kubectl apply -f ./your-yaml.yml\n      `}</Code>\n    </EclipseCon2023.SlideTemplate>\n  );\n}\n\nexport default slideControls(Slide060,\n  `/presentations/${EclipseCon2023.SLUG}/slide-050`,\n  `/presentations/${EclipseCon2023.SLUG}/slide-070`);\n","import React, {useState, useEffect} from 'react';\nimport {navigate} from 'gatsby';\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return ({...props}) => {\n    const [currentStep, setCurrentStep] = useState(1);\n    const handleOnKeyDown = (event) => {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'f':\n          if (event.metaKey || event.ctrlKey) {\n            document.body.requestFullscreen({navigationUI: 'hide'}).catch(console.error)\n            event.preventDefault();\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          if (document.fullscreenElement) {\n            document.exitFullscreen().catch(console.error);\n          }\n          navigate('/');\n          break;\n        default:\n      }\n    };\n    useEffect(() => {\n      document.addEventListener('keydown', handleOnKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', handleOnKeyDown, false);\n      };\n    }, [currentStep]);\n\n    return <WrappedComponent {...props} currentStep={currentStep} />;\n  }\n}\n\nexport default slideControls;\n"],"names":["slideControls","Slide060","React","EclipseCon2023","slide","title","className","style","display","justifyContent","Code","language","visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","_ref","props","setCurrentStep","useState","handleOnKeyDown","event","key","navigate","metaKey","ctrlKey","document","body","requestFullscreen","navigationUI","catch","console","error","preventDefault","fullscreenElement","exitFullscreen","useEffect","addEventListener","removeEventListener","Object","assign"],"sourceRoot":""}