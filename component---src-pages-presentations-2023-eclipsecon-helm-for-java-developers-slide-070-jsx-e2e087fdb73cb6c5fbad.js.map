{"version":3,"file":"component---src-pages-presentations-2023-eclipsecon-helm-for-java-developers-slide-070-jsx-e2e087fdb73cb6c5fbad.js","mappings":"+PAIO,MAAMA,EAA2BC,GAAeC,GACnDD,EAAcC,EAAQ,SAAW,UAExBC,EAAyBF,GAAeC,GACjDD,IAAgBC,EAAQ,SAAW,UAE1BE,EAA4BH,GAAeC,GACpDD,EAAcC,EAAQ,SAAW,UAoDrC,KAlDA,SAAuBG,EAAkBC,EAAcC,EAAUC,GAC/D,YADyE,IAAVA,IAAAA,EAAa,GAC5E,SAAAC,GACE,SAAAC,EAAYC,GAAQ,IAADC,EAKgC,OAJjDA,EAAAH,EAAAI,KAAA,KAAMF,IAAM,MACPG,MAAQ,CACXb,YAAa,GAEfW,EAAKG,gBAAkBH,EAAKI,UAAUC,KAAIL,GAAOA,CACnD,EAACM,EAAAA,EAAAA,GAAAR,EAAAD,GAAA,IAAAU,EAAAT,EAAAU,UAsCA,OAtCAD,EAEDE,OAAA,WACE,OAAOC,EAAAA,cAACjB,EAAgBkB,OAAAC,OAAA,GAAKC,KAAKd,MAAK,CAAEV,YAAawB,KAAKX,MAAMb,cACnE,EAACkB,EAEDO,kBAAA,WACEC,SAASC,iBAAiB,UAAWH,KAAKV,iBAAiB,EAC7D,EAACI,EAEDU,qBAAA,WACEF,SAASG,oBAAoB,UAAWL,KAAKV,iBAAiB,EAChE,EAACI,EAEDH,UAAA,SAAUe,GACR,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCP,KAAKX,MAAMb,YAAc,EAC3BwB,KAAKQ,SAAS,CAAChC,YAAawB,KAAKX,MAAMb,YAAc,KAErDiC,EAAAA,EAAAA,IAAS5B,GAEX,MACF,IAAK,QACL,IAAK,aACCmB,KAAKX,MAAMb,YAAcO,EAC3BiB,KAAKQ,SAAS,CAAChC,YAAawB,KAAKX,MAAMb,YAAc,KAErDiC,EAAAA,EAAAA,IAAS3B,GAEX,MACF,IAAK,MACL,IAAK,UACH2B,EAAAA,EAAAA,IAAS,KAIf,EAACxB,CAAA,CA7CH,CAAqBY,EAAAA,UA+CvB,C,oECzDA,MAAMa,EAAcC,IAAA,IAAC,MAACC,EAAQ,EAAC,SAAEC,EAAW,OAAM,SAAEC,GAASH,EAAA,OAC3Dd,EAAAA,cAAA,OAAKkB,MAAO,CAACC,SAAU,WAAYC,IAAgB,EAARL,EAAF,MAAkBM,KAAiB,EAARN,EAAF,MAAkBO,OAAQ,mBAC1FtB,EAAAA,cAACuB,EAAAA,GAAI,CAACP,SAAUA,EAAUQ,YAAa,CAACC,OAAQ,IAAMR,GAClD,EAgER,WAAeS,EAAAA,EAAAA,KA7DEC,IAEb3B,EAAAA,cAAC4B,EAAAA,GAAAA,GAA4B,CAACC,MAAO,EAAGC,MAAM,gEAC5C9B,EAAAA,cAAA,OAAK+B,UAAU,eACb/B,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,OAAKkB,MAAO,CAACc,QAAS,OAAQC,IAAK,OAAQC,WAAY,eACrDlC,EAAAA,cAACuB,EAAAA,GAAI,CAACP,SAAS,QAAQQ,YAAa,CAACC,OAAQ,IAAM,qSAWnDzB,EAAAA,cAAA,OAAKkB,MAAO,CAACC,SAAU,WAAYgB,UAAW,UAC5CnC,EAAAA,cAACa,EAAW,KAAG,iLAQfb,EAAAA,cAACa,EAAW,CAACE,MAAO,GAAK,4KAQzBf,EAAAA,cAACa,EAAW,CAACE,MAAO,GAAK,mLAQzBf,EAAAA,cAACa,EAAW,CAACE,MAAO,GAAK,kLAU7Bf,EAAAA,cAACuB,EAAAA,GAAI,CAACP,SAAS,SAAU,2DAU9B,kBAAiBY,EAAAA,GAAAA,eACjB,kBAAiBA,EAAAA,GAAAA,e","sources":["webpack://@marcnuri/presentations/./src/components/slide-controls/slide-controls.jsx","webpack://@marcnuri/presentations/./src/pages/presentations/2023-eclipsecon-helm-for-java-developers/slide-070.jsx"],"sourcesContent":["import React from 'react';\nimport {navigate} from 'gatsby';\n\n\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nexport const visibleClassNameUntilStep = currentStep => step =>\n  ((currentStep > step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentStep: 1\n      };\n      this.handleOnKeyDown = this.onKeyDown.bind(this);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} currentStep={this.state.currentStep} />;\n    }\n\n    componentDidMount() {\n      document.addEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    onKeyDown(event) {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (this.state.currentStep > 1) {\n            this.setState({currentStep: this.state.currentStep - 1});\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (this.state.currentStep < totalSteps) {\n            this.setState({currentStep: this.state.currentStep + 1});\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          navigate('/');\n          break;\n        default:\n      }\n    }\n  };\n}\n\nexport default slideControls;\n","import React from 'react';\nimport slideControls from '../../../components/slide-controls/slide-controls';\nimport {Code, EclipseCon2023} from '../../../components';\n\nconst StackedCard = ({index = 0, language = 'yaml', children}) => (\n  <div style={{position: 'absolute', top: `${index * 4}rem`, left: `${index * 8}rem`, border: '1px solid #777'}}>\n    <Code language={language} customStyle={{margin: 0}} >{children}</Code>\n  </div>\n  );\n\nconst Slide070 = () => {\n  return (\n    <EclipseCon2023.SlideTemplate slide={7} title='Deploying Java applications to Kubernetes - Challenges (III)'>\n      <div className='helm-charts'>\n        <h2>Helm charts</h2>\n        <div style={{display: 'flex', gap: '5rem', alignItems: 'flex-start'}}>\n          <Code language='shell' customStyle={{margin: 0}}>{`\n            ├── Chart.yaml\n            ├── LICENSE\n            ├── README.md\n            ├── templates\n            │   ├── config-map.yaml\n            │   ├── deployment.yaml\n            │   ├── secret.yaml\n            │   └── service.yaml\n            └── values.yaml\n          `}</Code>\n          <div style={{position: 'relative', minHeight: '35rem'}}>\n            <StackedCard>{`\n              kind: Deployment    \n              metadata:\n                name: app\n              spec:\n                replicas: 1\n              # ...\n            `}</StackedCard>\n            <StackedCard index={1}>{`\n              kind: Service       \n              metadata:\n                name: app\n              spec:\n                ports:\n              # ...\n            `}</StackedCard>\n            <StackedCard index={2}>{`\n              kind: ConfigMap\n              metadata:\n                name: app\n              data:\n               application.yml: >-\n              # ...\n            `}</StackedCard>\n            <StackedCard index={3}>{`\n              kind: Secret        \n              metadata:\n                name: app\n              type: Opaque\n              data:\n              # ...\n            `}</StackedCard>\n          </div>\n        </div>\n        <Code language='shell'>{`\n        $ helm create\n        $ helm push\n      `}</Code>\n      </div>\n    </EclipseCon2023.SlideTemplate>\n  );\n};\n\nexport default slideControls(Slide070,\n  `/presentations/${EclipseCon2023.SLUG}/slide-060`,\n  `/presentations/${EclipseCon2023.SLUG}/slide-080`);\n"],"names":["visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","visibleClassNameUntilStep","WrappedComponent","previousPage","nextPage","totalSteps","_React$Component","_class","props","_this","call","state","handleOnKeyDown","onKeyDown","bind","_inheritsLoose","_proto","prototype","render","React","Object","assign","this","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","key","setState","navigate","StackedCard","_ref","index","language","children","style","position","top","left","border","Code","customStyle","margin","slideControls","Slide070","EclipseCon2023","slide","title","className","display","gap","alignItems","minHeight"],"sourceRoot":""}